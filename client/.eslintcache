[{"E:\\MERN\\B-Kisan Demo\\client\\src\\index.js":"1","E:\\MERN\\B-Kisan Demo\\client\\src\\App.js":"2","E:\\MERN\\B-Kisan Demo\\client\\src\\ContextApi.js":"3","E:\\MERN\\B-Kisan Demo\\client\\src\\Components\\topnav\\TopNavBar.js":"4","E:\\MERN\\B-Kisan Demo\\client\\src\\Components\\topnav\\TabForm.js":"5","E:\\MERN\\B-Kisan Demo\\client\\src\\Components\\grid\\TabShoworders.js":"6","E:\\MERN\\B-Kisan Demo\\client\\src\\Components\\dashboard\\TabDashboard.js":"7","E:\\MERN\\B-Kisan Demo\\client\\src\\Components\\dashboard\\ProductCard.js":"8","E:\\MERN\\B-Kisan Demo\\client\\src\\Components\\dashboard\\videocard.js":"9","E:\\MERN\\B-Kisan Demo\\client\\src\\Components\\grid\\ShowOrders.js":"10","E:\\MERN\\B-Kisan Demo\\client\\src\\Components\\dashboard\\Location.js":"11","E:\\MERN\\B-Kisan Demo\\client\\src\\Components\\icons\\icons.js":"12","E:\\MERN\\B-Kisan Demo\\client\\src\\Components\\crudnav\\crudnav.js":"13","E:\\MERN\\B-Kisan Demo\\client\\src\\Components\\others\\GlobalFilter.js":"14","E:\\MERN\\B-Kisan Demo\\client\\src\\Components\\crudnav\\crudnav_deletebtn.js":"15","E:\\MERN\\B-Kisan Demo\\client\\src\\Components\\crudnav\\crudnav_updatebtn.js":"16","E:\\MERN\\B-Kisan Demo\\client\\src\\contextapi.js":"17","E:\\MERN\\B-Kisan Demo\\client\\src\\Components\\form\\form.js":"18","E:\\MERN\\B-Kisan Demo\\client\\src\\Components\\form\\statusbar.js":"19","E:\\MERN\\B-Kisan Demo\\client\\src\\Components\\form\\personal.js":"20","E:\\MERN\\B-Kisan Demo\\client\\src\\Components\\form\\bank.js":"21","E:\\MERN\\B-Kisan Demo\\client\\src\\Components\\form\\Order\\Order2.js":"22","E:\\MERN\\B-Kisan Demo\\client\\src\\Components\\form\\Order\\delivery.js":"23","E:\\MERN\\B-Kisan Demo\\client\\src\\Components\\form\\Order\\deposit.js":"24","E:\\MERN\\B-Kisan Demo\\client\\src\\Components\\form\\icons.js":"25","E:\\MERN\\B-Kisan Demo\\client\\src\\Loading.js":"26","E:\\MERN\\BKisan Demo 2\\client\\src\\index.js":"27","E:\\MERN\\BKisan Demo 2\\client\\src\\App.js":"28","E:\\MERN\\BKisan Demo 2\\client\\src\\contextapi.js":"29","E:\\MERN\\BKisan Demo 2\\client\\src\\Loading.js":"30","E:\\MERN\\BKisan Demo 2\\client\\src\\Components\\topnav\\TopNavBar.js":"31","E:\\MERN\\BKisan Demo 2\\client\\src\\Components\\topnav\\TabForm.js":"32","E:\\MERN\\BKisan Demo 2\\client\\src\\Components\\dashboard\\TabDashboard.js":"33","E:\\MERN\\BKisan Demo 2\\client\\src\\Components\\grid\\TabShoworders.js":"34","E:\\MERN\\BKisan Demo 2\\client\\src\\Components\\dashboard\\ProductCard.js":"35","E:\\MERN\\BKisan Demo 2\\client\\src\\Components\\dashboard\\Location.js":"36","E:\\MERN\\BKisan Demo 2\\client\\src\\Components\\dashboard\\videocard.js":"37","E:\\MERN\\BKisan Demo 2\\client\\src\\Components\\grid\\ShowOrders.js":"38","E:\\MERN\\BKisan Demo 2\\client\\src\\Components\\icons\\icons.js":"39","E:\\MERN\\BKisan Demo 2\\client\\src\\Components\\form\\form.js":"40","E:\\MERN\\BKisan Demo 2\\client\\src\\Components\\form\\personal.js":"41","E:\\MERN\\BKisan Demo 2\\client\\src\\Components\\form\\statusbar.js":"42","E:\\MERN\\BKisan Demo 2\\client\\src\\Components\\crudnav\\crudnav.js":"43","E:\\MERN\\BKisan Demo 2\\client\\src\\Components\\form\\bank.js":"44","E:\\MERN\\BKisan Demo 2\\client\\src\\Components\\others\\GlobalFilter.js":"45","E:\\MERN\\BKisan Demo 2\\client\\src\\Components\\form\\Order\\Order2.js":"46","E:\\MERN\\BKisan Demo 2\\client\\src\\Components\\form\\Order\\delivery.js":"47","E:\\MERN\\BKisan Demo 2\\client\\src\\Components\\form\\Order\\deposit.js":"48","E:\\MERN\\BKisan Demo 2\\client\\src\\Components\\form\\icons.js":"49","E:\\MERN\\BKisan Demo 2\\client\\src\\Components\\crudnav\\crudnav_deletebtn.js":"50","E:\\MERN\\BKisan Demo 2\\client\\src\\Components\\crudnav\\crudnav_updatebtn.js":"51"},{"size":183,"mtime":1613307784547,"results":"52","hashOfConfig":"53"},{"size":1306,"mtime":1613292863743,"results":"54","hashOfConfig":"53"},{"size":372,"mtime":1613286696867,"results":"55","hashOfConfig":"53"},{"size":3885,"mtime":1611567597141,"results":"56","hashOfConfig":"53"},{"size":220,"mtime":1613307814224,"results":"57","hashOfConfig":"53"},{"size":2737,"mtime":1613316821599,"results":"58","hashOfConfig":"53"},{"size":2421,"mtime":1613309039799,"results":"59","hashOfConfig":"53"},{"size":335,"mtime":1611564754312,"results":"60","hashOfConfig":"53"},{"size":1079,"mtime":1613308959467,"results":"61","hashOfConfig":"53"},{"size":8011,"mtime":1613312523679,"results":"62","hashOfConfig":"53"},{"size":1637,"mtime":1613308965248,"results":"63","hashOfConfig":"53"},{"size":11044,"mtime":1611564754346,"results":"64","hashOfConfig":"53"},{"size":1773,"mtime":1613231480047,"results":"65","hashOfConfig":"53"},{"size":331,"mtime":1613127750073,"results":"66","hashOfConfig":"53"},{"size":938,"mtime":1611565778115,"results":"67","hashOfConfig":"53"},{"size":18979,"mtime":1613314185470,"results":"68","hashOfConfig":"53"},{"size":372,"mtime":1613286696867,"results":"69","hashOfConfig":"53"},{"size":5877,"mtime":1613309826747,"results":"70","hashOfConfig":"53"},{"size":3345,"mtime":1613288770498,"results":"71","hashOfConfig":"53"},{"size":20744,"mtime":1613200566401,"results":"72","hashOfConfig":"53"},{"size":12550,"mtime":1613141587162,"results":"73","hashOfConfig":"53"},{"size":14497,"mtime":1613322327901,"results":"74","hashOfConfig":"53"},{"size":3657,"mtime":1613130568302,"results":"75","hashOfConfig":"53"},{"size":8223,"mtime":1613289639538,"results":"76","hashOfConfig":"53"},{"size":1146,"mtime":1612675229372,"results":"77","hashOfConfig":"53"},{"size":389,"mtime":1613302283904,"results":"78","hashOfConfig":"53"},{"size":494,"mtime":1613655990987,"results":"79","hashOfConfig":"80"},{"size":1346,"mtime":1613645894170,"results":"81","hashOfConfig":"80"},{"size":372,"mtime":1613645894620,"results":"82","hashOfConfig":"80"},{"size":389,"mtime":1613645894610,"results":"83","hashOfConfig":"80"},{"size":4509,"mtime":1613661351862,"results":"84","hashOfConfig":"80"},{"size":220,"mtime":1613645894589,"results":"85","hashOfConfig":"80"},{"size":2421,"mtime":1613645894352,"results":"86","hashOfConfig":"80"},{"size":3508,"mtime":1613663708677,"results":"87","hashOfConfig":"80"},{"size":335,"mtime":1613645894327,"results":"88","hashOfConfig":"80"},{"size":1637,"mtime":1613645894319,"results":"89","hashOfConfig":"80"},{"size":1079,"mtime":1613645894379,"results":"90","hashOfConfig":"80"},{"size":8011,"mtime":1613645894525,"results":"91","hashOfConfig":"80"},{"size":11044,"mtime":1613645894561,"results":"92","hashOfConfig":"80"},{"size":5877,"mtime":1613645894424,"results":"93","hashOfConfig":"80"},{"size":20744,"mtime":1613645894509,"results":"94","hashOfConfig":"80"},{"size":3345,"mtime":1613645894523,"results":"95","hashOfConfig":"80"},{"size":1773,"mtime":1613645894186,"results":"96","hashOfConfig":"80"},{"size":12550,"mtime":1613645894409,"results":"97","hashOfConfig":"80"},{"size":331,"mtime":1613645894569,"results":"98","hashOfConfig":"80"},{"size":14497,"mtime":1613645894392,"results":"99","hashOfConfig":"80"},{"size":3657,"mtime":1613645894400,"results":"100","hashOfConfig":"80"},{"size":8223,"mtime":1613645894408,"results":"101","hashOfConfig":"80"},{"size":1146,"mtime":1613645894431,"results":"102","hashOfConfig":"80"},{"size":938,"mtime":1613645894301,"results":"103","hashOfConfig":"80"},{"size":18979,"mtime":1613645894310,"results":"104","hashOfConfig":"80"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"107"},"91mqga",{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"107"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"107"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"107"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"118","usedDeprecatedRules":"107"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"121","usedDeprecatedRules":"107"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"107"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"126","usedDeprecatedRules":"107"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"129","usedDeprecatedRules":"107"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"132","usedDeprecatedRules":"107"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"107"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"107"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"107"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"107"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"107"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"107"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"147","usedDeprecatedRules":"107"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"150","usedDeprecatedRules":"107"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"153","usedDeprecatedRules":"107"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"156","usedDeprecatedRules":"107"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"159","messages":"160","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"161","usedDeprecatedRules":"107"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"164","usedDeprecatedRules":"107"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"107"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"107"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"171"},"117syfv",{"filePath":"172","messages":"173","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"171"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"171"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"171"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"180","usedDeprecatedRules":"171"},{"filePath":"181","messages":"182","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"171"},{"filePath":"183","messages":"184","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"121","usedDeprecatedRules":"171"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"187","messages":"188","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"171"},{"filePath":"189","messages":"190","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"132","usedDeprecatedRules":"171"},{"filePath":"191","messages":"192","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"126","usedDeprecatedRules":"171"},{"filePath":"193","messages":"194","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"129","usedDeprecatedRules":"171"},{"filePath":"195","messages":"196","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"171"},{"filePath":"197","messages":"198","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"147","usedDeprecatedRules":"171"},{"filePath":"199","messages":"200","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"153","usedDeprecatedRules":"171"},{"filePath":"201","messages":"202","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"150","usedDeprecatedRules":"171"},{"filePath":"203","messages":"204","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"171"},{"filePath":"205","messages":"206","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"156","usedDeprecatedRules":"171"},{"filePath":"207","messages":"208","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"171"},{"filePath":"209","messages":"210","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"211","usedDeprecatedRules":"171"},{"filePath":"212","messages":"213","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"161","usedDeprecatedRules":"171"},{"filePath":"214","messages":"215","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"164","usedDeprecatedRules":"171"},{"filePath":"216","messages":"217","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"171"},{"filePath":"218","messages":"219","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"171"},{"filePath":"220","messages":"221","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"171"},"E:\\MERN\\B-Kisan Demo\\client\\src\\index.js",[],["222","223"],"E:\\MERN\\B-Kisan Demo\\client\\src\\App.js",[],"E:\\MERN\\B-Kisan Demo\\client\\src\\ContextApi.js",[],"E:\\MERN\\B-Kisan Demo\\client\\src\\Components\\topnav\\TopNavBar.js",[],"E:\\MERN\\B-Kisan Demo\\client\\src\\Components\\topnav\\TabForm.js",[],"E:\\MERN\\B-Kisan Demo\\client\\src\\Components\\grid\\TabShoworders.js",["224","225","226","227"],"import React,{useState, useEffect,useContext, Suspense} from 'react'\r\n// import ShowOrders from './ShowOrders'\r\n\r\nimport axios from 'axios'\r\nimport {UserContext} from '../../contextapi'\r\n\r\nimport './login.css'\r\nimport Loading from '../../Loading'\r\n\r\nconst ShowOrders = React.lazy(()=>import('./ShowOrders'))\r\n\r\nconst TabShoworders = () => {\r\n    \r\n    // const [show,setshow]=useState(false)\r\n    const [login,setlogin]=useState('')\r\n    const [pass,setpass]=useState('')\r\n    const [loggedin,setloggedin]=useState(false)\r\n    const [registered,setregistered]=useState(false)\r\n    const [state,setState] = useContext(UserContext)\r\n\r\n    useEffect(() => {\r\n        setlogin('');\r\n        setpass('')\r\n    }, [state])\r\n    useEffect(() => {\r\n        if(login !== '' && pass !== '')\r\n        {\r\n            const payload = {username:login,password:pass}\r\n\r\n             axios.post(\"http://localhost:4000/user/add\",payload)\r\n             .then(()=>{\r\n                  console.log('successfully created a user || axios to mongodb')\r\n             })\r\n             .catch(()=>{\r\n                  console.log('unable  to  create a user')\r\n             })\r\n    \r\n        }//end of if\r\n    }, [registered])\r\n\r\n    useEffect(() => {\r\n       if(login !== '' && pass !== '')\r\n       {\r\n        const payload = {username:login,password:pass}\r\n\r\n        axios.get(\"http://localhost:4000/user/registered\",payload)\r\n        .then(()=>{\r\n             console.log('successfully logged in')\r\n            //  setshow(true)\r\n             setState({show_logout_btn:true})  \r\n\r\n        })\r\n        .catch((err)=>{\r\n             alert('unable  to login, Error:'+err)\r\n        })\r\n\r\n       }//if block\r\n\r\n    }, [loggedin])\r\n\r\n    return(\r\n    <>\r\n    {!state.show_logout_btn && <div >\r\n            \r\n                <form className=\"container\"  >\r\n                <input className=\"box\" type=\"text\" id=\"login\"  name=\"login\" placeholder=\"login\" value={login} onChange={(e)=>{setlogin(e.target.value)}}/>\r\n                <input className=\"box\" type=\"password\" id=\"password\"  name=\"password\" placeholder=\"password\" value={pass} onChange={(e)=>{setpass(e.target.value)}}/>\r\n               <div>\r\n                <button className=\"box\" className=\"btn btn-outline-success btn-lg \" onClick={(e)=>{ e.preventDefault(); setloggedin(true)}}>Login</button>\r\n                {/* <button className=\"box\" className=\"btn btn-outline-success btn-lg  \" onClick={(e)=>{ e.preventDefault(); setregistered(true)}}>Register</button> */}\r\n                </div>\r\n                </form>\r\n       </div>}\r\n\r\n     {state.show_logout_btn && \r\n     \r\n     <Suspense fallback={<Loading/>}>\r\n     <ShowOrders />\r\n     </Suspense>\r\n     \r\n     }\r\n    </>)\r\n}\r\nexport default TabShoworders","E:\\MERN\\B-Kisan Demo\\client\\src\\Components\\dashboard\\TabDashboard.js",["228","229","230","231","232"],"import React, { Component } from 'react'\r\n\r\nimport './dashboard.css'\r\nimport {Hammer,Love,Chat} from '../icons/icons' \r\nimport ProductCard from './ProductCard'\r\nimport VideoCard from './videocard'\r\nimport Location from './Location'\r\n\r\nfunction TabDashboard() {\r\n\r\n        return (\r\n        <div className=\"dash\">\r\n             <div className=\"hindi\">\r\n              <span>{'         '}</span>                    \r\n                   <img className='hindi_logo' src='./logo.jpg' alt='bkisan logo'/>  \r\n                   <span className=\"hindi_text\">{' '}किसान खर्च आधा, उत्पादन ज्यादा।</span>\r\n              <span>{'         '}</span>                    \r\n              </div>\r\n\r\n                \r\n              <div className=\"video_container\">\r\n                <div className=\"vcontainer1\">\r\n                 {React.useMemo(()=><VideoCard/>)}\r\n                </div>\r\n                <div className=\"vcontainer2\">\r\n                  {React.useMemo(()=> <Location/>) }              \r\n                 </div>\r\n                </div>              \r\n\r\n              <div className= \"product_div\">\r\n              <h1 style={{\"color\":\"rgba(30, 130, 76, 1)\" }}>Our Products</h1>\r\n              <h4 style={{\"color\":\"rgba(0, 177, 106, 1)\"}}>These products are organic affordable and help our farmers to make farming a profitable venture.</h4>  \r\n              <div className=\"product_container\">\r\n              <ProductCard  img_src={\"./products/PotassiumFluvate.jpg\"} img_name={\"Potassium Fluvate\"}/>\r\n              <ProductCard  img_src={\"./products/PotassiumHumate.jpg\"} img_name={\"Potassium Humate\"}/>\r\n              <ProductCard  img_src={\"./products/vaysinometa.jpeg\"} img_name={\"Vaysinometa\"}/> \r\n              <ProductCard  img_src={\"./products/reva+.jpg\"} img_name={\"reva +\"}/>\r\n              <ProductCard  img_src={\"./products/revaG9.jpg\"} img_name={\"reva g9\"}/>\r\n              </div>\r\n              </div> \r\n\r\n              <div className=\"oltu_container\">\r\n                <span> <Hammer/>{' with '}<Love/>{' by '}<img className=\"oltu_img\" src=\"./products/oltu.jpg\"/></span>{' | '}\r\n                <span>{'reach out : '}<Chat/> <a href=\"https://mail.google.com/mail/?view=cm&fs=1&tf=1&to=oltu.contact@gmail.com\" target=\"_blank\">oltu.contact@gmail.com</a></span>\r\n              </div>\r\n               \r\n\r\n        </div>\r\n        )\r\n\r\n}\r\nexport default TabDashboard","E:\\MERN\\B-Kisan Demo\\client\\src\\Components\\dashboard\\ProductCard.js",[],"E:\\MERN\\B-Kisan Demo\\client\\src\\Components\\dashboard\\videocard.js",["233","234"],"import React,{useState} from 'react'\r\nimport {ChevronRight} from '../icons/icons'\r\n\r\nimport './dashboard.css'\r\nfunction VideoCard() {\r\n    const id=['2e9viAUvwq4','B6j3nphJwCw','FFkOKY5JLwQ']\r\n    const video_url = 'https://www.youtube.com/embed/';\r\n    var [ind,setind]=useState(0);\r\n    const handleclick=()=>{\r\n        if(ind >= id.length-1)\r\n        {\r\n            setind(0)\r\n        }\r\n        else\r\n        {\r\n            setind(ind+1)\r\n        }\r\n    }\r\n    return (\r\n        < >\r\n        <div style={{\"display\":\"flex\", \"flexDirection\":\"row\", \"justifyContent\":\"flex-start\",\"margin\":\"5px 3px 5px 3px\"}}>\r\n           <iframe className=\"iframe\" \r\n            type=\"text/html\"  width=\"100%\" height=\"360\"\r\n            src={`https://youtube.com/embed/${id[ind]}?autoplay=0?controls=1?fs=1`}>\r\n            </iframe>\r\n          < button className=\"btn btn-outline-info \" onClick={handleclick} style={{\"height\":360, \"margin\":\"5px 0px 5px 5px \" }} data-toggle=\"tooltip\" title=\"Next Video\"><ChevronRight /></button>\r\n        </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default  VideoCard","E:\\MERN\\B-Kisan Demo\\client\\src\\Components\\grid\\ShowOrders.js",["235","236"],"import React,{useEffect,useState,useMemo} from 'react'\r\nimport {useTable,useGlobalFilter,useSortBy,usePagination } from 'react-table'\r\nimport Crudnav from '../crudnav/crudnav'\r\nimport  {GlobalFilter} from '../others/GlobalFilter'\r\n// import axios from 'axios'\r\n\r\n// import {arrow_up, arrow_down} from '../icons/icons'\r\n// import {format} from 'date-fns'\r\nimport './react-table.css'\r\n\r\nfunction ShowOrders() {\r\n\r\nconst GroupedColumns = [\r\n  {\r\n     Header:\"Personal Details\",\r\n     columns:[\r\n      {Header:'ORDER NUM', accessor:'OrderNo'}, \r\n      {Header:'ORDER DATE', accessor:'Date',\r\n      //  Cell:(value)=>{ return format(new Date(value.date),'dd/mm/yyyy')} \r\n    }, \r\n\r\n      {Header:'NAME', accessor:'Name'}, \r\n      {Header:'ADHAR', accessor:'AadharNo'}, \r\n      {Header:'CONTACT', accessor:'Contact'}, \r\n      {Header:'ADDRESS', accessor:'Address'}, \r\n      {Header:'TEHSIL', accessor:'Tehsil'}, \r\n      {Header:'DISTRICT', accessor:'District'}, \r\n      {Header:'PINCODE', accessor:'PinCode'}, \r\n      {Header:'STATE', accessor:'State'}, \r\n      {Header:'WATSAPP', accessor:'Watsapp'}, \r\n      {Header:'COMPANY', accessor:'CompanyName'}\r\n     ]\r\n  },\r\n  {\r\n    Header:\"Order Details\",\r\n    columns:[\r\n      {Header:'ORDER TABLE', accessor:'OrderTable',\r\n                Cell: (cell ) => (                  \r\n                  <div class=\"dropdown\">\r\n                  <button class=\"btn btn-secondary dropdown-toggle\" type=\"button\" id=\"dropdownMenuButton\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\r\n                    ORDER \r\n                  </button>\r\n                  <div class=\"dropdown-menu lg\" aria-labelledby=\"dropdownMenuButton\">\r\n                  <table className=\"embedded\">\r\n                    <tr>\r\n                      <th>Srlno</th>\r\n                      <th>Details</th>\r\n                      <th>Quantity</th>\r\n                      <th>Rate</th>\r\n                      <th>Amount</th>\r\n                    </tr>\r\n                    \r\n                    { cell.row.values.OrderTable.map(function(row,index){return <tr>\r\n                       <td>{index}</td>\r\n                       <td>{row.Order_Details}</td>\r\n                       <td>{row.Order_Quantity}</td>\r\n                       <td>{row.Order_Rate}</td>\r\n                       <td>{row.Order_Amount}</td>                      \r\n                       </tr>})}\r\n                  </table>\r\n                  </div>\r\n                </div>\r\n                )\r\n\r\n\r\n                },\r\n                {Header:'BILL AMOUNT', accessor:'BillAmt'},  \r\n                {Header:'TRANSPORT CHARGE', accessor:'TransportChrg'}, \r\n                {Header:'TOTAL AMOUNT', accessor:'TotalAmt'}, \r\n                {Header:'ADVANCE PAID', accessor:'Advance'}, \r\n                {Header:'DUE AMOUNT', accessor:'DueAmt'  }, \r\n                {Header:'DELIVERY DATE', accessor:'DeliveryDate' },  \r\n                {Header:'DELIVERY PLACE', accessor:'DeliveryPlace'}, \r\n                 {Header:'DEPOSIT TABLE', accessor:'DepositTable',Cell: ({ cell }) => (    \r\n\r\n                  <div class=\"dropdown\">\r\n                  <button class=\"btn btn-secondary dropdown-toggle\" type=\"button\" id=\"dropdownMenuButton\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\r\n                    Deposit\r\n                  </button>\r\n                  <div class=\"dropdown-menu\" aria-labelledby=\"dropdownMenuButton\">\r\n                  <table className=\"embedded\">\r\n                    <tr>\r\n                      <th>Srlno</th>\r\n                      <th>Date</th>\r\n                      <th>Bank</th>\r\n                      <th>UTR Number</th>\r\n                      <th>Amount</th>\r\n                    </tr>\r\n\r\n                        { cell.row.values.DepositTable.map(function(row,index){return <tr>\r\n                       <td>{index}</td>\r\n                       <td>{row.Deposit_Date}</td>\r\n                       <td>{row.Deposit_Bank}</td>\r\n                       <td>{row.Deposit_UTRNo}</td>\r\n                       <td>{row.Deposit_Amount}</td>                      \r\n                       </tr>})}\r\n                  </table>\r\n                  </div>\r\n                </div>\r\n\r\n\r\n                )  }\r\n    ]\r\n  },\r\n  {\r\n    Header:\"Bank Details\",\r\n    columns:[\r\n      {Header:'BANK ACCOUNT', accessor:'Ac'             }, \r\n                {Header:'ACCOUNT HOLDER', accessor:'AcHolder'     }, \r\n                {Header:'ACCOUNT NUMBER', accessor:'AcNo'         },  \r\n                {Header:'IFSC CODE', accessor:'IFSC'              },  \r\n                {Header:'DEALER NAME', accessor:'DealerName'      },    \r\n                {Header:'DEALER CONTACT', accessor:'DealerContact'}\r\n    ]\r\n  },\r\n]  \r\n\r\n  const [RowData,setRowData] = useState([])\r\n\r\n\r\n  const fetch_data=async()=>{\r\n    try{\r\n      let ref = await fetch('/order/show')\r\n    ref = await ref.json();\r\n    // console.log(ref);\r\n    setRowData(ref);\r\n    }\r\n    catch(e){\r\n     console.error(e);\r\n    } \r\n  }\r\n  useMemo(() => {\r\n     fetch_data()   \r\n  }, [])\r\n\r\n\r\n\r\n  const columns = useMemo(()=> GroupedColumns,[]  )\r\n  // const data = useMemo( () => RowData,[] )\r\n\r\n  // const columns = GroupedColumns\r\n  const data = RowData\r\n\r\n\r\n  const {\r\n    getTableProps,\r\n    getTableBodyProps,\r\n    headerGroups,\r\n    page,\r\n    nextPage,\r\n    previousPage,\r\n    canNextPage,\r\n    canPreviousPage,\r\n    pageOptions,\r\n    gotoPage,\r\n    state,\r\n    setGlobalFilter, \r\n    prepareRow,\r\n  } = useTable({\r\n    columns,\r\n    data,\r\n  },\r\n  useGlobalFilter,useSortBy,usePagination)\r\n  const {pageIndex} = state \r\n  const {globalFilter} = state\r\n\r\n  // Render the UI for your table\r\n\r\n  return (\r\n    <>\r\n    <Crudnav/>\r\n    <div style={{ \"background-color\": \"wheat\"}}>\r\n    <table className=\"grid_table\" {...getTableProps()}>\r\n      <thead className=\"grid_thead\">\r\n        {headerGroups.map(headerGroup => (\r\n          <tr className=\"grid_tr\" {...headerGroup.getHeaderGroupProps()}>\r\n            {headerGroup.headers.map(column => (\r\n              <th className=\"grid_th\" {...column.getHeaderProps(column.getSortByToggleProps())}>\r\n                {column.render('Header')}\r\n                  {column.isSorted ? (column.isSortedDesc ? ' v':' ^'):''}\r\n                </th>\r\n            ))}\r\n          </tr>\r\n        ))}\r\n      </thead>\r\n      <tbody {...getTableBodyProps()}>\r\n        {page.map((row, i) => {\r\n          prepareRow(row)\r\n          return (\r\n            <tr className=\"grid_tr\" {...row.getRowProps()}>\r\n              {row.cells.map((cell ,i) => {\r\n                return <td className=\"grid_td\" {...cell.getCellProps()}>{cell.render('Cell')}</td>\r\n              })}\r\n            </tr> \r\n          )\r\n        })}\r\n      </tbody>\r\n    </table>  \r\n\r\n\r\n\r\n    <div className=\"search-bar row\" style={{\"padding\":\"5px\"}}>\r\n    <div className=\"col\" style={{\"padding\":\"7px\"}}>\r\n          <GlobalFilter  filter={globalFilter} setFilter={setGlobalFilter}/>\r\n    </div> \r\n      <div className=\"col\" style={{\"paddingTop\":\"7px\"}}>\r\n        <span>\r\n         {' '}Page{' '}\r\n         <strong>{' '}\r\n           {pageIndex + 1} of {pageOptions.length} \r\n         </strong>\r\n        </span>\r\n        <span>\r\n        {' '}|{' '}Go to Page :\r\n          <input style={{\"min-width\":\"15vw\"}}   type=\"number\" defaultValue={pageIndex+1}\r\n          onChange={e=>{ \r\n            const pageNumber = e.target.value ? Number(e.target.value) - 1 : 0\r\n            gotoPage(pageNumber)\r\n          }}\r\n            /> \r\n        </span>\r\n        </div>\r\n        <div className=\"col\" style={{\"paddingTop\":\"5px\"}}>\r\n        <button className=\"btn btn-primary\" onClick={() => previousPage()} disabled={!canPreviousPage}>Previous</button>\r\n        </div>\r\n        <div className=\"col\">\r\n        </div> \r\n        <div className=\"col\" style={{\"paddingTop\":\"5px\"}}>\r\n        <button className=\"btn btn-primary\" onClick={() => nextPage()} disabled={!canNextPage}>Next</button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default ShowOrders\r\n","E:\\MERN\\B-Kisan Demo\\client\\src\\Components\\dashboard\\Location.js",["237","238","239","240","241"],"import React from 'react'\r\nimport {GeoLocation,Link,Linkdin,Facebook,Youtube} from '../icons/icons' \r\n\r\nfunction Location() {\r\n    return (\r\n        <div>\r\n            <div>\r\n                <span><GeoLocation/>{'  '}village+post - Taloon, district + Barwani(Madhyapradesh), Pin: 451551, India.</span>\r\n                <br/>\r\n                <br/>\r\n                <div className=\"row\" >\r\n                <a className=\"col\" data-toggle=\"tooltip\" title=\"Find on google maps\"  href=\"https://goo.gl/maps/jRn15qT3nipavgiDA\" target=\"_blank\"><GeoLocation/>{'  '}Reva Flora</a> \r\n                <a className=\"col\" data-toggle=\"tooltip\" title=\"Find on google maps\" href=\"https://goo.gl/maps/PnUQM1D4Pa9u11AWA\" target=\"_blank\"><GeoLocation/>{'  '}B-kisan</a> \r\n                </div><br/>\r\n\r\n                <div className=\"row\" ></div>\r\n                <a className=\"col\" data-toggle=\"tooltip\" title=\"LinkdIn\"  href=\"https://linkedin.com/in/b-kisan-24a998200\" target=\"_blank\"><Linkdin/>{' '}Linkedin</a>\r\n                <a className=\"col\" data-toggle=\"tooltip\" title=\"Kisanpathshala Website \" href=\"http://www.kisanpathshala.com/\" target=\"_blank\"><Link/>{' '}Kisanpathshala</a>        \r\n                <a className=\"col\" data-toggle=\"tooltip\" title=\"Facebook\" href=\"https://www.facebook.com/B-kisan-378294852890092\" target=\"__blank\"><Facebook/>{' '}Facebook</a>        \r\n                <a className=\"col\" data-toggle=\"tooltip\" title=\"Youtube Channel\" href=\"https://www.youtube.com/channel/UCweQPKBI7cRH-zV70Xwfseg\" target=\"_blank\"><Youtube/>{' '}Youtube</a><br/>\r\n            </div>    \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Location\r\n","E:\\MERN\\B-Kisan Demo\\client\\src\\Components\\icons\\icons.js",[],"E:\\MERN\\B-Kisan Demo\\client\\src\\Components\\crudnav\\crudnav.js",[],"E:\\MERN\\B-Kisan Demo\\client\\src\\Components\\others\\GlobalFilter.js",[],"E:\\MERN\\B-Kisan Demo\\client\\src\\Components\\crudnav\\crudnav_deletebtn.js",[],"E:\\MERN\\B-Kisan Demo\\client\\src\\Components\\crudnav\\crudnav_updatebtn.js",[],"E:\\MERN\\B-Kisan Demo\\client\\src\\contextapi.js",[],"E:\\MERN\\B-Kisan Demo\\client\\src\\Components\\form\\form.js",["242","243","244","245","246","247"],"import React,{useState,useEffect} from 'react'\r\nimport axios from 'axios'\r\n\r\nimport './form.css'\r\n\r\nimport Status from './statusbar'\r\nimport Personal from './personal'\r\n\r\nimport Order from './Order/Order2'\r\nimport Delivery from './Order/delivery' \r\nimport Deposit  from './Order/deposit' \r\n\r\nimport Bank  from './bank'\r\n\r\n\r\n\r\nfunction Form() {\r\n        const [personal,setpersonal]=useState(true)\r\n        const [order,setorder]=useState(false)\r\n        const [bank,setbank]=useState(false)\r\n        \r\n        function personal_next(){\r\n                setpersonal(false)\r\n                setorder(true)\r\n        }\r\n        function order_previous(){\r\n            setorder(false)\r\n            setpersonal(true)\r\n        }\r\n        function order_next(){\r\n            setorder(false)\r\n            setbank(true)  \r\n        }\r\n        function bank_previous(){\r\n            setbank(false)\r\n            setorder(true)\r\n        }\r\n        function submit_clicked(e){\r\n            e.preventDefault()\r\n            const f={...a,...b1,...b2,...b3,...c}\r\n            // alert('submit clicked'+ JSON.stringify(f))\r\n\r\n            axios.post( '/order/add' ,f)\r\n            .then((data)=>{\r\n                // console.log(data)\r\n                alert(\"Successfully submitted form.\")\r\n            })\r\n            .catch((err)=>{alert('Error : '+err)})\r\n            \r\n\r\n            seta(initial_a)\r\n            setb1(initial_b1)\r\n            setb2(initial_b2)\r\n            setb3(initial_b3)\r\n            setc(initial_c)\r\n\r\n            setshow_a(false)\r\n            setshow_b1(false)\r\n            setshow_b2(false)\r\n            setshow_b3(false)\r\n            setshow_c(false)\r\n            set_is_valid('')\r\n\r\n            setpersonal(true)\r\n            setorder(false)\r\n            setbank(false)\r\n        }\r\n\r\n        const initial_a = {\r\n                            OrderNo:'',\r\n                            Date:'',\r\n                            Name:'',\r\n                            AadharNo:null,\r\n                            Address:'',\r\n                            Tehsil:'',\r\n                            District:'',\r\n                            PinCode:null,\r\n                            State:'',\r\n                            Watsapp:null,\r\n                            Contact:null,\r\n                            CompanyName:''\r\n                        }  \r\n        const [a,seta] = useState(initial_a)\r\n       \r\n        const initial_b1={\r\n                            OrderTable:[],\r\n                            OrderCount:0, \r\n                            TotalAmt:0,\r\n                            Advance:0, \r\n                            BillAmt:0,\r\n                            TransportChrg:0,\r\n                            DueAmt:0\r\n                          }\r\n        const [b1,setb1]=useState(initial_b1)\r\n\r\n        const initial_b2 = {\r\n                                DeliveryDate:'',\r\n                                DeliveryPlace:'',\r\n                            }\r\n        const [b2,setb2]=useState(initial_b2)\r\n\r\n        const initial_b3 = {\r\n                                DepositTable:[],\r\n                                DepositCount:0 \r\n                            }\r\n        const [b3,setb3]=useState(initial_b3)\r\n         \r\n\r\n        const initial_c={Ac:'',\r\n                        AcHolder:'',\r\n                        AcNo:null,\r\n                        IFSC:'',\r\n                        DealerName:'',\r\n                        DealerContact:null}\r\n        const [c,setc]=useState(initial_c)\r\n\r\n        const [show_a,setshow_a]=useState(false)\r\n        const [show_b1,setshow_b1]=useState(false)\r\n        const [show_b2,setshow_b2]=useState(false)\r\n        const [show_b3,setshow_b3]=useState(false)\r\n        const [show_c,setshow_c]=useState(false)\r\n\r\n\r\n        const [is_valid,set_is_valid]=useState('')\r\n\r\n    \r\n  \r\n        // useEffect(() => {\r\n        // console.log('form validation was altered') \r\n        //  if(show_a && show_b1 && show_b2 && show_b3 && show_c)\r\n        // {\r\n        //    set_is_valid('form is valid')\r\n        // }  \r\n\r\n        // }, [show_a,show_b1,show_b2,show_b3,show_c])\r\n\r\n        useEffect(() => {\r\n            console.log('form validation was altered') \r\n             if(a.Name !== '' && a.AadharNo !== null && a.Contact!=null  && b1.OrderTable.length >=1  && b3.DepositTable.length >=1 && c.AcNo!==null && c.IFSC !=='')\r\n            {\r\n               set_is_valid('form is valid')\r\n            }  \r\n            else{\r\n                set_is_valid('')\r\n            }\r\n            }, [c.DealerContact])\r\n\r\n    return (\r\n        <div className=\"form_cont\">\r\n        <Status fields={{...a,...b1,...b2,...b3,...c}} />\r\n        {personal &&\r\n        <div className=\"f\" >\r\n        <Personal sv={a} ssv={seta} show={setshow_a}/>\r\n        <div className=\"bottom_bar \">\r\n        <button onClick={personal_next} className=\"btn_bottom_bar\" >Next</button>            \r\n        </div>\r\n        </div>}\r\n        \r\n        {order &&\r\n        <div className=\"f\" >\r\n        <Order sv={b1} ssv={setb1} show={setshow_b1} />\r\n        <Delivery sv={b2} ssv={setb2} show={setshow_b2}/>\r\n        <Deposit sv ={b3} ssv={setb3} show={setshow_b3}/>\r\n        <div className=\"bottom_bar \">\r\n            <button onClick={order_previous} className=\"btn_bottom_bar\" >Previous</button>\r\n            <button onClick={order_next} className=\"btn_bottom_bar\" >Next</button>            \r\n        </div>\r\n        </div>}\r\n\r\n         { bank &&  \r\n        <div className=\"f\" >\r\n        <Bank sv={c} ssv={setc} show={setshow_c}/>\r\n        <div className=\"bottom_bar \">\r\n            <button onClick={bank_previous} className=\"btn_bottom_bar\" >Previous</button>\r\n            <button onClick={submit_clicked} className=\"btn_bottom_bar\" disabled={!`${is_valid}`} >Submit</button>            \r\n        </div>\r\n        </div>}\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Form","E:\\MERN\\B-Kisan Demo\\client\\src\\Components\\form\\statusbar.js",["248","249","250","251","252","253","254","255","256"],"import React,{useEffect, useState} from 'react'\r\nimport './statusbar.css'\r\nimport {Correct, Incorrect} from './icons'\r\nfunction Status(props) {\r\n        // var f =[false,false,false,false,false];\r\n\r\n        var  [f0,setf0] =useState(false);\r\n        var  [f1,setf1] =useState(false);\r\n        var  [f2,setf2] =useState(false);\r\n        var  [f3,setf3] =useState(false);\r\n        var  [f4,setf4] =useState(false);\r\n\r\n        var {\r\n            OrderNo,\r\n            Date,\r\n            Name,\r\n            AadharNo,\r\n            Address,\r\n            Tehsil,\r\n            District,\r\n            PinCode,\r\n            State,\r\n            Watsapp,\r\n            Contact,\r\n            CompanyName,\r\n\r\n            OrderTable,\r\n            OrderCount, \r\n            TotalAmt,\r\n            Advance, \r\n            BillAmt,\r\n            TransportChrg,\r\n            DueAmt,\r\n\r\n            DeliveryDate,\r\n            DeliveryPlace,\r\n\r\n            DepositTable,\r\n            DepositCount,\r\n            \r\n            Ac,\r\n            AcHolder,\r\n            AcNo,\r\n            IFSC,\r\n            DealerName,\r\n            DealerContact\r\n\r\n        } = {...props.fields}\r\n\r\n       function check_validity()\r\n       {\r\n          if(\r\n            Date !=='' &&\r\n            Name !=='' &&\r\n            AadharNo !==null &&\r\n            Address !=='' &&\r\n            Tehsil !=='' &&\r\n            District !=='' &&\r\n            PinCode !==null &&\r\n            State !=='' &&\r\n            Watsapp !==null &&\r\n            Contact !==null &&\r\n            CompanyName !==''\r\n          )\r\n          {\r\n            setf0(true)\r\n          }\r\n          else{\r\n            setf0(false)\r\n          }\r\n\r\n          if(OrderTable.length >=1 )\r\n          {\r\n            setf1(true);\r\n          }\r\n          else{\r\n            setf1(false)\r\n          }\r\n          if(\r\n            DeliveryDate !== '' &&\r\n            DeliveryPlace !== ''\r\n          )\r\n          {\r\n            setf2(true) \r\n          }\r\n          else\r\n          {\r\n            setf2(false)\r\n          }\r\n\r\n          if(\r\n            DepositTable.length >=1\r\n          )\r\n          {\r\n            setf3(true) \r\n          }\r\n          else\r\n          {\r\n            setf3(false)\r\n          }\r\n\r\n          if(\r\n            Ac !== '' &&\r\n            AcHolder !== '' &&\r\n            AcNo !== null &&\r\n            IFSC !== '' &&\r\n            DealerName !== '' &&\r\n            DealerContact !== null\r\n            )\r\n          {\r\n            setf4(true) \r\n          }\r\n          else\r\n          {\r\n            setf4(false)\r\n          }\r\n          \r\n       } \r\n\r\n       useEffect(() => {\r\n        check_validity()  \r\n       },[props])\r\n       return (\r\n        <>\r\n        <div className=\"table_stats\" >\r\n        <span  className={`tr_stats ${f0 ? \"back1\" :\"back2\"}`}>Step 1 : {f0 ?  <Correct/>:<Incorrect/>}</span>\r\n        <span  className={`tr_stats ${f1 ? \"back1\" :\"back2\"}`}>Step 2 : {f1 ? <Correct/>:<Incorrect/>}</span>\r\n        <span  className={`tr_stats ${f2 ? \"back1\" :\"back2\"}`}>Step 3 : {f2 ?  <Correct/>:<Incorrect/>}</span>\r\n        <span  className={`tr_stats ${f3 ? \"back1\" :\"back2\"}`}>Step 4 : {f3 ? <Correct/>:<Incorrect/>}</span>\r\n        <span  className={`tr_stats ${f4 ? \"back1\" :\"back2\"}`}>Step 5 : {f4 ?  <Correct/>:<Incorrect/>}</span>\r\n        </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Status\r\n","E:\\MERN\\B-Kisan Demo\\client\\src\\Components\\form\\personal.js",["257"],"import React,{useEffect,useState,useRef} from 'react'\r\n// import ScriptTag from 'react-script-tag'\r\n\r\nimport './form.css'\r\n\r\nfunction Personal(props) {\r\n\r\nconst InputRef = useRef(null)\r\n\r\nconst [err,seterr]=useState({err_OrderNo:{show:true ,message:''},\r\n                            err_Date:{show:true ,message:''},\r\n                            err_Name:{show:true ,message:''},\r\n                            err_AadharNo:{show:true ,message:'',message1:''},\r\n                            err_Address:{show:true ,message:''},\r\n                            err_Tehsil:{show:true ,message:''},\r\n                            err_District:{show:true ,message:''},\r\n                            err_PinCode:{show:true ,message:'',message1:''},\r\n                            err_State:{show:true ,message:''},\r\n                            err_Watsapp:{show:true ,message:'',message1:''},\r\n                            err_Contact:{show:true ,message:'',message1:''},\r\n                            err_CompanyName:{show:true ,message:''}})\r\n\r\n                            function count_digit(n) {\r\n                                var count = 0;\r\n                                if (n >= 1) ++count;\r\n                              \r\n                                while (n / 10 >= 1) {\r\n                                  n /= 10;\r\n                                  ++count;\r\n                                }\r\n                              \r\n                                return count;\r\n                              }                \r\n                                function field_is_empty(value)\r\n                                {\r\n                                    if(value === '' || value === null)\r\n                                    {return true}\r\n                                    else\r\n                                    {return false}\r\n                                }\r\n    function validate_form(name,value){\r\n     switch (name) {\r\n        case 'OrderNo': if(field_is_empty(value))\r\n                        {\r\n                            err.err_OrderNo.show=false\r\n                            err.err_OrderNo.message='this field cannot be empty.'\r\n                        }\r\n                       else\r\n                        {\r\n                            err.err_OrderNo.show=false\r\n                        }  \r\n            break; \r\n        case 'Date':if(field_is_empty(value))\r\n                        {\r\n                            seterr((prevState)=>({\r\n                                ...prevState,\r\n                                err_Date:{\r\n                                ...prevState.err_Date,\r\n                                show:true,\r\n                                message:'Date field cannot be empty'    \r\n                                }\r\n                            }))\r\n                        }\r\n                    else\r\n                        {\r\n                            seterr((prevState)=>({\r\n                                ...prevState,\r\n                                err_Date:{\r\n                                ...prevState.err_Date,\r\n                                show:false    \r\n                                }\r\n                            }))\r\n                        }\r\n            break; \r\n        case 'Name':if(field_is_empty(value))\r\n                        {\r\n                            seterr((prevState)=>({\r\n                                ...prevState,\r\n                                err_Name:{\r\n                                    ...prevState.err_Name,\r\n                                    show:true,\r\n                                    message:'Name field cannot be empty'\r\n                                }\r\n                            }))\r\n                        }\r\n                    else\r\n                        {\r\n                            seterr((prevState)=>({\r\n                                ...prevState,\r\n                                err_Name:{\r\n                                ...prevState.err_Name,\r\n                                show:false    \r\n                                }\r\n                            }))\r\n                        }\r\n            break; \r\n        case 'AadharNo':if(field_is_empty(value))\r\n                        {\r\n                            seterr((prevState)=>({\r\n                                ...prevState,\r\n                                err_AadharNo:{\r\n                                    ...prevState.err_AadharNo,\r\n                                    show:true,\r\n                                    message:'Adhaar Number cannot be blank'\r\n                                }\r\n                            }))\r\n                        }\r\n                    else\r\n                        {\r\n                            seterr((prevState)=>({\r\n                                ...prevState,\r\n                                err_AadharNo:{\r\n                                 ...prevState.err_AadharNo,\r\n                                 show:false\r\n                                }\r\n                            }))\r\n                        }\r\n                        if(count_digit(value) === 12)\r\n                        {\r\n                            seterr((prevState)=>({\r\n                                ...prevState,\r\n                                err_AadharNo:{\r\n                                ...prevState.err_AadharNo,\r\n                                show:false,\r\n                                message1:''    \r\n                                }\r\n                            }))\r\n                        }\r\n                        else\r\n                        {\r\n                            seterr((prevState)=>({\r\n                                ...prevState,\r\n                                err_AadharNo:{\r\n                                ...prevState.err_AadharNo,\r\n                                show:true,\r\n                                message1:'|  Aadhaar Number must be of 12 digits'    \r\n                                }\r\n                            }))\r\n                        }\r\n            break;  \r\n        case 'Address':if(field_is_empty(value))\r\n                        {\r\n                            seterr((prevState)=>({\r\n                                ...prevState,\r\n                                err_Address:{\r\n                                ...prevState.err_Address,\r\n                                show:true,\r\n                                message:'Address field cannot be empty'    \r\n                                }\r\n                            }))\r\n                        }\r\n                    else\r\n                        {\r\n                            seterr((prevState)=>({\r\n                                ...prevState,\r\n                                err_Address:{\r\n                                ...prevState.err_Address,\r\n                                show:false    \r\n                                }\r\n                            }))\r\n                        }\r\n            break; \r\n        case 'Tehsil':if(field_is_empty(value))\r\n                        {\r\n                            seterr((prevState)=>({\r\n                            ...prevState,\r\n                            err_Tehsil:{\r\n                            ...prevState.err_Tehsil,\r\n                            show:true,\r\n                            message:'Tehsil must not be empty'\r\n                            }\r\n                            }))\r\n                        }\r\n                    else\r\n                        {\r\n                            seterr((prevState)=>({\r\n                            ...prevState,\r\n                            err_Tehsil:{\r\n                            ...prevState.err_Tehsil,\r\n                            show:false    \r\n                            }\r\n                            }))\r\n                            err.err_Tehsil.show=false\r\n                        }\r\n            break; \r\n        case 'District':if(field_is_empty(value))\r\n                        {\r\n                            seterr((prevState)=>({\r\n                                ...prevState,\r\n                                err_District:{\r\n                                ...prevState.err_District,\r\n                                show:true,\r\n                                message:'District field cannot be blank'    \r\n                                }\r\n                            }))\r\n                     \r\n                        }\r\n                    else\r\n                        {\r\n                            seterr((prevState)=>({\r\n                                ...prevState,\r\n                                err_District:{\r\n                                ...prevState.err_District,\r\n                                show:false    \r\n                                }\r\n                            }))\r\n                        }\r\n            break; \r\n        case 'PinCode':if(field_is_empty(value))\r\n                        {\r\n                            seterr((prevState)=>({\r\n                                ...prevState,\r\n                                err_PinCode:{\r\n                                ...prevState.err_PinCode,\r\n                                show:true,\r\n                                message: 'Pincode cannot be empty'   \r\n                                }\r\n                            }))\r\n                        }\r\n                    else\r\n                        {\r\n                            seterr((prevState)=>({\r\n                                ...prevState,\r\n                                err_PinCode:{\r\n                                ...prevState.err_PinCode,\r\n                                show:false    \r\n                                }\r\n                            }))\r\n                        }\r\n                    if(count_digit(value) === 6)\r\n                    {\r\n                        seterr((prevState)=>({\r\n                            ...prevState,\r\n                            err_PinCode:{\r\n                                ...prevState.err_PinCode,\r\n                                show:false  \r\n                                \r\n                            }\r\n                        }))\r\n                    }\r\n                    else\r\n                    {\r\n                        seterr((prevState)=>({\r\n                            ...prevState,\r\n                            err_PinCode:{\r\n                            ...prevState.err_PinCode,\r\n                            show:true,\r\n                            message1:'| Pincode must be 6 digits' \r\n                            }\r\n                        }))\r\n                    }    \r\n            break;  \r\n        case 'State':if(field_is_empty(value))\r\n                        {\r\n                            seterr((prevState)=>({\r\n                                ...prevState,\r\n                                err_State:{\r\n                                ...prevState.err_State,\r\n                                show:true,\r\n                                message:'State field cannot be empty'\r\n                                }\r\n                            }))\r\n                        }\r\n                    else\r\n                        {\r\n                            seterr((prevState)=>({\r\n                                ...prevState,\r\n                                err_State:{\r\n                                    ...err.err_State,\r\n                                    show:false\r\n                                }\r\n                            }))\r\n                        }\r\n            break; \r\n        case 'Watsapp':if(field_is_empty(value))\r\n                        {\r\n                            seterr((prevState)=>({\r\n                                ...prevState,\r\n                                err_Watsapp:{\r\n                                ...prevState.err_Watsapp,\r\n                                show:true,\r\n                                message:'Watsapp Number field cannot be empty'    \r\n                                }\r\n                            }))\r\n                        }\r\n                    else\r\n                        {\r\n                            seterr((prevState)=>({\r\n                                ...prevState,\r\n                                err_Watsapp:{\r\n                                ...prevState.err_Watsapp,\r\n                                show:false    \r\n                                }\r\n                            }))\r\n                        }\r\n                    if(count_digit(value) === 10 )\r\n                    { \r\n                        seterr((prevState)=>({\r\n                           ...prevState,\r\n                           err_Watsapp:{\r\n                               ...prevState.err_Watsapp,\r\n                               show:false,\r\n                               message1:''\r\n                           }\r\n                        }))\r\n                    }\r\n                    else\r\n                    {    \r\n                        seterr((prevState)=>({\r\n                            ...prevState,\r\n                            err_Watsapp:{\r\n                                ...prevState.err_Watsapp,\r\n                                show:true,\r\n                                message1:'| Number must be 10 digits'\r\n                            }\r\n\r\n                        }))\r\n                     }    \r\n            break;  \r\n        case 'Contact':if(field_is_empty(value))\r\n                        {\r\n                            seterr((prevState)=>({\r\n                                ...prevState,\r\n                                    err_Contact:{\r\n                                ...prevState.err_Contact,\r\n                                    show:true,\r\n                                    message:'Contact field cannot be blank '      \r\n                                }\r\n                            }))\r\n                        }\r\n                    else\r\n                        {\r\n                            seterr((prevState)=>({\r\n                                ...prevState,\r\n                                    err_Contact:{\r\n                                     ...prevState.err_Contact,\r\n                                     show:false,\r\n                                     message:''\r\n                                    }\r\n                            }))\r\n                        }\r\n                    if(count_digit(value) === 10 )\r\n                        {   \r\n                            seterr((prevState)=>({\r\n                                ...prevState,\r\n                                err_Contact:{\r\n                                ...prevState.err_Contact,\r\n                                show:false,\r\n                                message1:''    \r\n                                }\r\n                            }))\r\n                            }\r\n                     else\r\n                        {  \r\n                            seterr((prevState)=>({\r\n                                ...prevState,\r\n                                    err_Contact:{\r\n                                        ...prevState.err_Contact,\r\n                                        show:true,\r\n                                        message1:'| Contact number must have 10 digits'\r\n                                    }\r\n                                }\r\n                            ))   \r\n                         }  \r\n            break;  \r\n        case 'CompanyName':if(field_is_empty(value))\r\n                        {\r\n\r\n                             seterr((prevState) => ({\r\n                                 ...prevState,\r\n                                 err_CompanyName: {\r\n                                   ...prevState.err_CompanyName,\r\n                                   show: true,\r\n                                   message: \"Company Name cannot be empty\"}\r\n                                 }\r\n                                 ))\r\n\r\n                            // err.err_CompanyName.show=true\r\n                            // err.err_CompanyName.message='this field cannot be empty'\r\n                        }\r\n                    else\r\n                        {\r\n                             seterr((prevState) => ({\r\n                                 ...prevState,\r\n                                 err_CompanyName: {\r\n                                   ...prevState.err_CompanyName,\r\n                                   show: false,\r\n                                   message: \"\"}\r\n                                 }\r\n                                 ))\r\n                            // err.err_CompanyName.show=false\r\n                        }\r\n            break;\r\n         default: alert('unknown error occured')\r\n             break;\r\n     }\r\n    }\r\n\r\n\r\n    function handle_change(e){\r\n        var name = e.target.name\r\n        var value= e.target.value\r\n        validate_form(name, value) \r\n        props.ssv({...props.sv, [e.target.name]: e.target.value})\r\n    }\r\n    \r\n    useEffect(() => {\r\n        InputRef.current.focus()\r\n    }, [])\r\n   \r\n    useEffect(() => {\r\n         if( \r\n             !err.err_OrderNo.show &&  !err.err_Date.show &&  !err.err_Name.show &&  !err.err_AadharNo.show && \r\n             !err.err_Address.show &&  !err.err_Tehsil.show && !err.err_District.show &&  !err.err_PinCode.show && \r\n             !err.err_State.show &&    !err.err_Watsapp.show &&  !err.err_Contact.show &&  !err.err_CompanyName.show )\r\n        {\r\n            console.log('setting show a to true')\r\n            props.show(true)\r\n        }\r\n        else{\r\n            props.show(false)\r\n            console.log('setting show a to false')\r\n        }\r\n\r\n    },[err])\r\n\r\n    return (\r\n        <div className=\"frame\">\r\n            <h1>Personal details</h1>  \r\n            <input className=\"Input\"  ref={InputRef} name=\"OrderNo\" value={props.sv.OrderNo} onChange={handle_change}   placeholder=\"Order No\" type=\"text\"/>\r\n            { err.err_OrderNo.show ?<div>{err.err_OrderNo.message}</div>:'' }\r\n           \r\n            <input className=\"Input\"  name=\"Date\" value={props.sv.Date} onChange={handle_change}  placeholder=\"Date\" type=\"date\"/>\r\n            { err.err_Date.show ?<div>{err.err_Date.message}</div>:'' }\r\n\r\n            <input className=\"Input\"  name=\"Name\" value={props.sv.Name}  onChange={handle_change} placeholder=\"Name\" type=\"text\" />     \r\n            { err.err_Name.show ?<div>{err.err_Name.message}</div>:'' }\r\n\r\n            <input className=\"Input\"  name=\"AadharNo\" value={props.sv.AadharNo} maxlength=\"12\"  onChange={handle_change} placeholder=\"Adhaar No\" type=\"tel\"  />\r\n            { err.err_AadharNo.show ?<div>{err.err_AadharNo.message + err.err_AadharNo.message1}</div>:'' }\r\n\r\n            <input className=\"Input\"  name=\"Address\" value={props.sv.Address}  onChange={handle_change} placeholder=\"Address\" type=\"text\" />  \r\n            { err.err_Address.show ?<div>{err.err_Address.message}</div>:'' }\r\n\r\n            <input className=\"Input\"  name=\"Tehsil\"  value={props.sv.Tehsil}  onChange={handle_change} placeholder=\"Tehsil\" type=\"text\" />  \r\n            { err.err_Tehsil.show ?<div>{err.err_Tehsil.message}</div>:'' }\r\n\r\n            <input className=\"Input\"  name=\"District\" value={props.sv.District}  onChange={handle_change} placeholder=\"District\" type=\"text\" /> \r\n            { err.err_District.show ?<div>{err.err_District.message}</div>:'' }\r\n\r\n            <input className=\"Input\"  name=\"PinCode\"  value={props.sv.PinCode}  maxlength=\"6\" onChange={handle_change} placeholder=\"Pincode\" type=\"tel\" /> \r\n            { err.err_PinCode.show ?<div>{err.err_PinCode.message + err.err_PinCode.message1}</div>:'' }\r\n\r\n            <input className=\"Input\"  name=\"State\" value={props.sv.State}  onChange={handle_change} placeholder=\"State\" type=\"text\" />\r\n            { err.err_State.show ?<div>{err.err_State.message}</div>:'' }\r\n\r\n            <input className=\"Input\"  name=\"Watsapp\"   value={props.sv.Watsapp}  maxlength=\"10\"  onChange={handle_change} placeholder=\"Watsapp\" type=\"tel\" />\r\n            { err.err_Watsapp.show ?<div>{err.err_Watsapp.message + err.err_Watsapp.message1 }</div>:'' }\r\n\r\n            <input className=\"Input\"  name=\"Contact\"   value={props.sv.Contact}  maxlength=\"10\"  onChange={handle_change} placeholder=\"Contact\" type=\"tel\" />\r\n            { err.err_Contact.show ?<div>{err.err_Contact.message + err.err_Contact.message1}</div>:'' }\r\n\r\n            <input className=\"Input\"  name=\"CompanyName\"   value={props.sv.CompanyName}  onChange={handle_change} placeholder=\"Company Name\" type=\"text\" />\r\n            { err.err_CompanyName.show ?<div>{err.err_CompanyName.message}</div>:'' }\r\n       \r\n            {/* <input className=\"Input\"  type=\"submit\" onClick={()=>{alert( JSON.stringify(props.sv))}}/> */}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Personal\r\n","E:\\MERN\\B-Kisan Demo\\client\\src\\Components\\form\\bank.js",["258","259","260"],"import React,{useState,useEffect,useRef} from 'react'\r\n\r\nimport './form.css'\r\nfunction Bank(props) {\r\n\r\n    const InputRef = useRef(null);\r\n    function handle_input(e){\r\n        var name = e.target.name\r\n        var value= e.target.value\r\n        validate_form(name, value) \r\n        props.ssv({...props.sv, [e.target.name]: e.target.value})\r\n    }\r\n\r\n    const [err,seterr]=useState({\r\n        err_Ac:{ show:true , message:'Select atleast One Account' },\r\n        err_AcHolder:{ show:true , message:'' },\r\n        err_AcNo:{ show:true , message:'',message1:'' },\r\n        err_IFSC:{ show:true , message:'',message1:'' },\r\n        err_DealerName:{ show:true , message:'' },\r\n        err_DealerContact:{ show:true , message:'',message1:'' },\r\n    })\r\n\r\n    function count_digit(n) {\r\n        var count = 0;\r\n        if (n >= 1) ++count;\r\n      \r\n        while (n / 10 >= 1) {\r\n          n /= 10;\r\n          ++count;\r\n        }\r\n      \r\n        return count;\r\n      }                \r\n        function field_is_empty(value)\r\n        {\r\n            if(value === '' || value === null)\r\n            {return true}\r\n            else\r\n            {return false}\r\n        }\r\n    function validate_form(name,value){\r\n        switch (name) {\r\n            case 'Ac':if(field_is_empty(value))\r\n                      {\r\n                          seterr((prevState)=>({\r\n                            ...prevState,\r\n                            err_Ac:{\r\n                            ...prevState.err_Ac,\r\n                            show:true,\r\n                            message:'Deposit Account must be chosen'    \r\n                            }\r\n                          }))\r\n                      }\r\n                      else{\r\n                          seterr((prevState)=>({\r\n                            ...prevState,\r\n                            err_Ac:{\r\n                            ...prevState.err_Ac,\r\n                            show:false    \r\n                            }\r\n                          }))\r\n                      }\r\n                break;\r\n            case 'AcHolder':if(field_is_empty(value))\r\n                      {\r\n                           seterr((prevState)=>({\r\n                               ...prevState,\r\n                               err_AcHolder:{\r\n                               ...prevState.err_AcHolder,\r\n                               show:true,\r\n                               message:'Account holder name must be filled'    \r\n                               }\r\n                           })) \r\n                      }\r\n                      else{\r\n                          seterr((prevState)=>({\r\n                               ...prevState,\r\n                               err_AcHolder:{\r\n                               ...prevState.err_AcHolder,\r\n                               show:false    \r\n                               }\r\n                           })) \r\n                      }\r\n                break;\r\n            case 'AcNo':if(field_is_empty(value))\r\n                        {\r\n                            seterr((prevState)=>({\r\n                                ...prevState,\r\n                                err_AcNo:{\r\n                                ...prevState.err_AcNo,\r\n                                show:true,\r\n                                message:'Account Number cannot be blank'   \r\n                                }\r\n                            })) \r\n                        }\r\n                        else{\r\n                            seterr((prevState)=>({\r\n                                ...prevState,\r\n                                err_AcNo:{\r\n                                ...prevState.err_AcNo,\r\n                                show:false,\r\n                                message:''    \r\n                                }\r\n                                \r\n                            })) \r\n                        }\r\n                        if(count_digit(value) >= 9 && count_digit(value) <=18 )\r\n                        {\r\n                            seterr((prevState)=>({\r\n                                ...prevState,\r\n                                err_AcNo:{\r\n                                ...prevState.err_AcNo,\r\n                                show:false    \r\n                                }\r\n                            }))\r\n                        }\r\n                        else\r\n                        {\r\n                             seterr((prevState)=>({\r\n                                ...prevState,\r\n                                err_AcNo:{\r\n                                ...prevState.err_AcNo,\r\n                                show:true,\r\n                                message1:'| Account Number must be 9 to 18 digits'    \r\n                                }\r\n                            }))\r\n                        }\r\n                break;\r\n            case 'IFSC':if(field_is_empty(value))\r\n                        {\r\n                            seterr((prevState)=>({\r\n                                ...prevState,\r\n                                err_IFSC:{\r\n                                ...prevState.err_IFSC,\r\n                                show:true,\r\n                                message:'IFSC Code cannot be blank'    \r\n                                }\r\n                            })) \r\n                        }\r\n                        else{\r\n                            seterr((prevState)=>({\r\n                                ...prevState,\r\n                                err_IFSC:{\r\n                                ...prevState.err_IFSC,\r\n                                show:false,\r\n                                message:''    \r\n                                }\r\n                            })) \r\n                        }\r\n                        if(value.match('([A-Za-z0]{4})(0\\[0-9]{6})$') || value.match('([A-Za-z0]{4})(0\\[A-Za-z]{6})$'))     \r\n                        {\r\n                            seterr((prevState)=>({\r\n                                ...prevState,\r\n                                err_IFSC:{\r\n                                ...prevState.err_IFSC,\r\n                                show:false    \r\n                                }\r\n                            }))\r\n                        } \r\n                        else{\r\n                             seterr((prevState)=>({\r\n                                ...prevState,\r\n                                err_IFSC:{\r\n                                ...prevState.err_IFSC,\r\n                                show:true,\r\n                                message1:'| IFSC Code not correct'    \r\n                                }\r\n                            }))\r\n                        }\r\n                break;  \r\n            case 'DealerName':if(field_is_empty(value))\r\n                        {\r\n                            seterr((prevState)=>({\r\n                                ...prevState,\r\n                                err_DealerName:{\r\n                                ...prevState.err_DealerName,\r\n                                show:true,\r\n                                message:'Dealer name cannot be empty'    \r\n                                }    \r\n                            })) \r\n                        }\r\n                        else{\r\n                            seterr((prevState)=>({\r\n                                ...prevState,\r\n                                err_DealerName:{\r\n                                ...prevState.err_DealerName,\r\n                                show:false    \r\n                                }\r\n                            })) \r\n                        }\r\n                break;\r\n            case 'DealerContact':if(field_is_empty(value))\r\n                        {\r\n                            seterr((prevState)=>({\r\n                                ...prevState,\r\n                                err_DealerContact:{\r\n                                ...prevState.err_DealerContact,\r\n                                show:true,\r\n                                message:'Dealer Contact Number cannot be empty'    \r\n                                }\r\n                            })) \r\n                        }\r\n                        else{\r\n                            seterr((prevState)=>({\r\n                                ...prevState,\r\n                                err_DealerContact:{\r\n                                ...prevState.err_DealerContact,\r\n                                show:false,\r\n                                message:'' \r\n                                }\r\n                            })) \r\n                        }\r\n                        if(count_digit(value) === 10)   \r\n                        {\r\n                            seterr((prevState)=>({\r\n                                ...prevState,\r\n                                err_DealerContact:{\r\n                                ...prevState.err_DealerContact,\r\n                                show:false    \r\n                                }\r\n                            }))\r\n                        }   \r\n                        else\r\n                        {\r\n                            seterr((prevState)=>({\r\n                                ...prevState,\r\n                                err_DealerContact:{\r\n                                ...prevState.err_DealerContact,\r\n                                show:true,\r\n                                message1:'| Dealer Contact Number must have 10 digits '    \r\n                                }\r\n                            }))\r\n                        }  \r\n                break;               \r\n            default:alert('some unknown error happened')\r\n                break;\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n      InputRef.current.focus()\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        if( \r\n            !err.err_Ac.show &&  !err.err_AcHolder.show &&  !err.err_AcNo.show && \r\n            !err.err_IFSC.show && !err.err_DealerName.show &&  !err.err_DealerContact.show  )\r\n       {\r\n           console.log('setting show c to true')\r\n           props.show(true)\r\n       }\r\n       else{\r\n            console.log('setting show c to false')\r\n            props.show(false)\r\n       }\r\n\r\n   },[err])\r\n\r\n    return ( \r\n        <div className=\"frame\">\r\n            <h1>Bank details</h1>             \r\n            {/* <input className=\"Input\"  value={props.sv.Ac} name='Ac'onChange={handle_input} placeholder=\"Deposit Account\" type=\"text\"/> */}\r\n            <label htmlFor=\"rows\"style={{\"float\":\"left\",\"padding-left\":\"25px\"}} ><h2>Deposit Account</h2></label>\r\n             <div className=\"rows\"> \r\n             <div className=\"cols\">\r\n             <input  type=\"radio\" name=\"Ac\" value=\"SBI\" onChange={handle_input}/>\r\n            <h4>SBI BANK ACCOUNT DETAILS</h4>\r\n            <h5>IFSC: SBIN0030509 <br/> A/c Number: 38279304216</h5>\r\n             </div>\r\n             <div className=\"cols\">\r\n             <input   type=\"radio\" name=\"Ac\" value=\"HDFC\" onChange={handle_input}/>\r\n            <h4 >HDFC BANK ACCOUNT DETAILS</h4>\r\n            <h5>IFSC:HDFC0004042  <br/> A/c Number: 502000377762797</h5>\r\n             </div> \r\n            </div>\r\n\r\n            { err.err_Ac.show ?<div>{err.err_Ac.message}</div>:'' }\r\n\r\n            <input ref={InputRef} className=\"Input\"  value={props.sv.AcHolder} name='AcHolder'     onChange={handle_input} placeholder=\"Account holder\" type=\"text\"/>\r\n            { err.err_AcHolder.show ?<div>{err.err_AcHolder.message}</div>:'' }\r\n\r\n            <input className=\"Input\"  value={props.sv.AcNo} name='AcNo'         onChange={handle_input} placeholder=\"Account Number\" type=\"text\"/>\r\n            { err.err_AcNo.show ?<div>{err.err_AcNo.message + err.err_AcNo.message1}</div>:'' }\r\n\r\n            <input className=\"Input\"  value={props.sv.IFSC} name='IFSC' maxLength=\"11\" onChange={handle_input} placeholder=\"IFSC Code\" type=\"text\"/>\r\n            { err.err_IFSC.show ?<div>{err.err_IFSC.message+ err.err_IFSC.message1}</div>:'' }\r\n\r\n            <input className=\"Input\"  value={props.sv.DealerName} name='DealerName'   onChange={handle_input} placeholder=\"Dealer Name\" type=\"text\"/>\r\n            { err.err_DealerName.show ?<div>{err.err_DealerName.message }</div>:'' }\r\n\r\n            <input className=\"Input\"  value={props.sv.DealerContact} name='DealerContact'onChange={handle_input} placeholder=\"Dealer Contact\" type=\"number\"/>  \r\n            { err.err_DealerContact.show ?<div>{err.err_DealerContact.message+ err.err_DealerContact.message1 }</div>:'' }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Bank\r\n\r\n\r\n","E:\\MERN\\B-Kisan Demo\\client\\src\\Components\\form\\Order\\Order2.js",["261","262","263","264","265","266"],"E:\\MERN\\B-Kisan Demo\\client\\src\\Components\\form\\Order\\delivery.js",["267"],"import React,{useState,useEffect} from 'react'\r\n// import './delivery.css'\r\nimport '../form.css'\r\nimport '../order.css'\r\nfunction Delivery(props) {\r\n    // console.log('rendering delivery')\r\n\r\n    const [err,seterr]=useState({\r\n        err_DeliveryDate:{ show:true , message:'' },\r\n        err_DeliveryPlace:{ show:true , message:'' },\r\n    })\r\n\r\n    \r\n    function field_is_empty(value)\r\n    {\r\n        if(value === '' || value === null)\r\n        {return true}\r\n        else\r\n        {return false}\r\n    }  \r\n    function validate_form(name,value){\r\n        switch (name) {\r\n            case 'DeliveryDate':if(field_is_empty(value) ){\r\n                seterr((prevState)=>({\r\n                    ...prevState,\r\n                    err_DeliveryDate:{\r\n                    ...prevState.err_DeliveryDate,\r\n                    show:true,\r\n                    message:'Delivery Date cant be blank!'    \r\n                    }\r\n                }))\r\n                }\r\n                    else{\r\n                        seterr((prevState)=>({\r\n                            ...prevState,\r\n                            err_DeliveryDate:{\r\n                            ...prevState.err_DeliveryDate,\r\n                            show:false,\r\n                            message:''    \r\n                            }\r\n                        }))\r\n\r\n                }\r\n    break;\r\n    case 'DeliveryPlace':if(field_is_empty(value)){\r\n        seterr((prevState)=>({\r\n            ...prevState,\r\n            err_DeliveryPlace:{\r\n            ...prevState.err_DeliveryPlace,\r\n            show:true,\r\n            message:'Delivery Place cannot be blank!'    \r\n            }\r\n        }))\r\n        }\r\n            else{\r\n                seterr((prevState)=>({\r\n                    ...prevState,\r\n                    err_DeliveryPlace:{\r\n                    ...prevState.err_DeliveryPlace,\r\n                    show:false,\r\n                    message:''    \r\n                    }\r\n                }))\r\n        }\r\n        break;\r\n    \r\n        default:alert('unknown case encountered');\r\n        break;\r\n        }\r\n    }\r\n\r\n\r\n    function handle_input(e){\r\n        var name = e.target.name\r\n        var value= e.target.value\r\n        validate_form(name, value) \r\n        // props.ssv({...props.sv, [e.target.name]: e.target.value})\r\n        props.ssv((prevState)=>({\r\n            ...prevState,\r\n            [e.target.name]:e.target.value\r\n        }))\r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n        if( \r\n            !err.err_DeliveryDate.show &&  !err.err_DeliveryPlace.show   )\r\n       {\r\n           console.log('setting show b2 to true')\r\n           props.show(true)\r\n       }\r\n       else{\r\n           props.show(false)\r\n           console.log('setting show b2 to false')\r\n       }\r\n\r\n   },[err])\r\n\r\n    return (\r\n        <div className = \"frame1\">\r\n         <table>\r\n        <tr className=\"del_cont\">  \r\n        <div className=\"del_dat\">\r\n        <td>Delivery Date :</td>  \r\n        <td ><input style={{\"min-width\":\"7vw\"}} name=\"DeliveryDate\" value={props.sv.DeliveryDate} onChange={handle_input}    type=\"date\"/></td>\r\n        {err.err_DeliveryDate.show ? <td>{err.err_DeliveryDate.message}</td>:''   }\r\n        </div>\r\n        <div className=\"del_add\">\r\n        <td>Delivery Address :</td>  \r\n        <td ><input style={{\"min-width\":\"25vw\"}} name=\"DeliveryPlace\" value={props.sv.DeliveryPlace} onChange={handle_input}    placeholder=\"Delivery Address\" type=\"text\"/></td> \r\n        {err.err_DeliveryPlace.show ? <td>{err.err_DeliveryPlace.message}</td>:''   }\r\n        </div>\r\n        </tr>\r\n\r\n         </table>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default  React.memo(Delivery)\r\n","E:\\MERN\\B-Kisan Demo\\client\\src\\Components\\form\\Order\\deposit.js",["268"],"import React,{useState,useEffect} from 'react'\r\nimport '../form.css'\r\nimport '../order.css'\r\nfunction Deposit(props) {\r\n    const initial_bnk = {\r\n        Deposit_Date:'',\r\n        Deposit_Amount:0,\r\n        Deposit_UTRNo:'',\r\n        Deposit_Bank:''  \r\n    }\r\nconst [bnk,setbnk] = useState(initial_bnk)\r\n\r\nconst [bnk_count,set_bnk_count] = useState(0)\r\nconst [del_bnk_count,set_del_bnk_count]=useState(0)\r\n\r\nconst [is_valid,set_is_valid]=useState('')\r\n\r\n    const [err,seterr]=useState({\r\n        err_Deposit_Date  :{ show:true , message:''},\r\n        err_Deposit_Amount :{ show:true , message:''},\r\n        err_Deposit_UTRNo :{ show:true , message:''},\r\n        err_Deposit_Bank:{show:true, message:''}\r\n    })\r\n\r\n    function handle_bnk_input(e){\r\n        var name = e.target.name\r\n        var value= e.target.value\r\n        validate_form(name, value) \r\n        setbnk((prevState)=>({\r\n            ...prevState,\r\n            [name]:value\r\n        })) \r\n    }\r\n\r\n    function add_bnk(e){\r\n        e.preventDefault()\r\n        set_bnk_count(bnk_count+1)\r\n        var payload = {\r\n            Deposit_Date:bnk.Deposit_Date,\r\n            Deposit_Amount:bnk.Deposit_Amount,\r\n            Deposit_UTRNo:bnk.Deposit_UTRNo,\r\n            Deposit_Bank:bnk.Deposit_Bank \r\n        }\r\n        var f1=async(payload)=>{\r\n           await props.sv.DepositTable.push(payload)\r\n        }\r\n        f1(payload);\r\n        // props.sv.DepositTable.push(payload)\r\n        // alert(JSON.stringify(payload))\r\n        setbnk(initial_bnk)\r\n    }\r\n    function delete_bnk(e,indx){\r\n        e.preventDefault()\r\n        set_del_bnk_count(del_bnk_count+1)\r\n        var data = [...props.sv.DepositTable];\r\n        data.splice(indx, 1);\r\n        props.ssv({DepositTable:data})\r\n    }\r\n\r\n\r\n    function field_is_empty(value)\r\n{\r\n    if(value === '' || value === null)\r\n    {return true}\r\n    else\r\n    {return false}\r\n}  \r\n    function validate_form(name,value){\r\n    // console.log(name,value)\r\n    switch (name) {\r\n    case 'Deposit_Date':if(field_is_empty(value) && bnk_count === 0){\r\n        seterr((prevState)=>({\r\n            ...prevState,\r\n            err_Deposit_Date:{\r\n            ...prevState.err_Deposit_Date,\r\n            show:true,\r\n            message:'Deposit Date cannot be blank!'    \r\n            }\r\n        }))\r\n        }\r\n            else{\r\n                seterr((prevState)=>({\r\n                    ...prevState,\r\n                    err_Deposit_Date:{\r\n                    ...prevState.err_Deposit_Date,\r\n                    show:false,\r\n                    message:''    \r\n                    }\r\n                }))\r\n        }\r\nbreak;\r\n\r\ncase 'Deposit_Amount':if(field_is_empty(value) && bnk_count === 0){\r\n    seterr((prevState)=>({\r\n        ...prevState,\r\n        err_Deposit_Amount:{\r\n        ...prevState.err_Deposit_Amount,\r\n        show:true,\r\n        message:'Deposit Amount cannot be blank!'    \r\n        }\r\n    }))\r\n    }\r\n        else{\r\n            seterr((prevState)=>({\r\n                ...prevState,\r\n                err_Deposit_Amount:{\r\n                ...prevState.err_Deposit_Amount,\r\n                show:false,\r\n                message:''    \r\n                }\r\n            }))\r\n    }\r\nbreak;\r\n\r\ncase 'Deposit_UTRNo':if(field_is_empty(value) && bnk_count === 0){\r\nseterr((prevState)=>({\r\n    ...prevState,\r\n    err_Deposit_UTRNo:{\r\n    ...prevState.err_Deposit_UTRNo,\r\n    show:true,\r\n    message:' UTR/IMPS/RTGS/Ref no number  cannot be blank!'    \r\n    }\r\n}))\r\n}\r\n    else{\r\n        seterr((prevState)=>({\r\n            ...prevState,\r\n            err_Deposit_UTRNo:{\r\n            ...prevState.err_Deposit_UTRNo,\r\n            show:false,\r\n            message:''    \r\n            }\r\n        }))\r\n}\r\nbreak;\r\ncase 'Deposit_Bank':if(field_is_empty(value) && bnk_count === 0){\r\nseterr((prevState)=>({\r\n...prevState,\r\nerr_Deposit_Bank:{\r\n...prevState.err_Deposit_Bank ,\r\nshow:true,\r\nmessage:' Bank Name cannot be blank!'    \r\n}\r\n}))\r\n}\r\nelse{\r\n    seterr((prevState)=>({\r\n        ...prevState,\r\n        err_Deposit_Bank:{\r\n        ...prevState.err_Deposit_Bank,\r\n        show:false,\r\n        message:''    \r\n        }\r\n    }))\r\n}\r\nbreak;\r\n\r\ndefault:alert('unknown case encountered');\r\nbreak;\r\n}\r\n}\r\n\r\nfunction table_len(){\r\n    var len = props.sv.DepositTable.length;\r\n    if (len >=1 )\r\n    return true\r\n    else\r\n    return false\r\n    }    \r\nuseEffect(() => {\r\n    if(table_len())\r\n   {\r\n       console.log('setting show b3 to true')\r\n       props.show(true)\r\n   }\r\n   else{\r\n    console.log('setting show b3 to false')\r\n    props.show(false)   \r\n   }\r\n\r\n},[bnk_count,del_bnk_count])\r\n\r\nuseEffect(() => {\r\n    if( bnk.Deposit_Date === '' || bnk.Deposit_Amount === 0 || bnk.Deposit_UTRNo === '' || bnk.Deposit_Bank === '' )\r\n        {\r\n            set_is_valid('')\r\n        }\r\n        else\r\n        {\r\n           set_is_valid('form is valid')\r\n        }    \r\n}, [bnk])\r\n\r\nreturn (\r\n    <>\r\n                        <h1>Deposit details</h1>  \r\n        <div className = \"frame1\">           \r\n            <table>\r\n                {/* {JSON.stringify(props.sv.DepositTable)} */}\r\n                <tr className=\"tablebox\">\r\n                    <th className=\"tablecell\"><span>[+/-]</span></th>\r\n                    <th className=\"tablecell\"><span>Deposit Date</span></th>\r\n                    <th className=\"tablecell\"><span>Amount</span></th>\r\n                    <th className=\"tablecell\"><span>UTR/RTGS/IMPS</span></th>\r\n                    <th className=\"tablecell\"><span>Bank Name</span></th>\r\n                </tr>\r\n                <tr className=\"tablebox\">\r\n                    <td className=\"tablecell\">{}</td>\r\n                    <td className=\"tablecell\">{err.err_Deposit_Date.show ?<span>{err.err_Deposit_Date.message}</span>:''}</td>\r\n                    <td className=\"tablecell\">{err.err_Deposit_Amount.show ?<span>{err.err_Deposit_Amount.message}</span>:''} </td>\r\n                    <td className=\"tablecell\">{err.err_Deposit_UTRNo.show ?<span>{err.err_Deposit_UTRNo.message}</span>:''}</td>\r\n                    <td className=\"tablecell\">{err.err_Deposit_Bank.show ?<span>{err.err_Deposit_Bank.message}</span>:''}</td>\r\n                </tr>  \r\n                <tr className=\"tablebox\" id=\"sdfh\">\r\n                    <td className=\"tablecell\">\r\n                        <button className=\"btn_add\" onClick={add_bnk} disabled={!`${is_valid}`}>+</button>\r\n                    </td>\r\n                    <td className=\"tablecell\">\r\n                        <input style={{\"min-width\":\"10vw\"}} name=\"Deposit_Date\" value={bnk.Deposit_Date} onChange={handle_bnk_input} placeholder=\"Deposit Date\"  className=\"in\" type=\"date\"/>\r\n                    </td>\r\n                    <td className=\"tablecell\">\r\n                        <input name=\"Deposit_Amount\" value={bnk.Deposit_Amount} onChange={handle_bnk_input} placeholder=\"Deposit Amount\"  className=\"inp\" type=\"number\"/>\r\n                    </td>\r\n                    <td className=\"tablecell\">\r\n                        <input name=\"Deposit_UTRNo\" value={bnk.Deposit_UTRNo} onChange={handle_bnk_input} placeholder=\"UTR/IMPS/RTGS/REF No\" className=\"inp\" type=\"text\"/>\r\n                    </td>\r\n                    <td className=\"tablecell\">\r\n                        <input name=\"Deposit_Bank\" value={ bnk.Deposit_Bank}  onChange={handle_bnk_input} placeholder=\"Bank Name\"  className=\"inp\"  type=\"text\"/>\r\n                    </td>\r\n                </tr>\r\n                {\r\n                     props.sv.DepositTable.map((k,indx)=>{\r\n                       return (<tr className=\"tablebox\" key={\"indx\"+indx}>\r\n                           <td className=\"tablecell\" ><button className=\"del_btn\" onClick={(e,indx)=>delete_bnk(e,indx)}>delete{' '}{indx+1}</button></td>\r\n                           <td className=\"tablecell\">{k.Deposit_Date}</td>\r\n                           <td className=\"tablecell\">{k.Deposit_Amount}</td>\r\n                           <td className=\"tablecell\">{k.Deposit_UTRNo}</td>\r\n                           <td className=\"tablecell\">{k.Deposit_Bank}</td>\r\n                       </tr>)\r\n                     })\r\n                     }\r\n            </table>    \r\n        </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default  React.memo(Deposit)\r\n","E:\\MERN\\B-Kisan Demo\\client\\src\\Components\\form\\icons.js",[],"E:\\MERN\\B-Kisan Demo\\client\\src\\Loading.js",[],"E:\\MERN\\BKisan Demo 2\\client\\src\\index.js",[],["269","270"],"E:\\MERN\\BKisan Demo 2\\client\\src\\App.js",[],"E:\\MERN\\BKisan Demo 2\\client\\src\\contextapi.js",[],"E:\\MERN\\BKisan Demo 2\\client\\src\\Loading.js",[],"E:\\MERN\\BKisan Demo 2\\client\\src\\Components\\topnav\\TopNavBar.js",["271","272"],"import React, {useContext,useState } from 'react'\r\nimport {NavLink} from 'react-router-dom'\r\n\r\nimport {UserContext} from '../../contextapi'\r\n\r\nimport './NavBar.css'\r\nimport {Home,ContactUs,Telephone,Pencil,Email,OrderList} from '../icons/icons'\r\nimport {useAuth0} from '@auth0/auth0-react'\r\n\r\n\r\nfunction TopNavBar()\r\n  {\r\n      const [state,setState] = useContext(UserContext)\r\n      const logout_clicked=()=>{\r\n        setState({show_logout_btn: false})  \r\n        // alert(\"logout clicked\"+ state.show_logout_btn)\r\n    }\r\n\r\n    const [click, setClick] = useState(false);\r\n    const handleClick = () => setClick(!click);\r\n\r\n\r\n    const {loginWithRedirect,logout,isAuthenticated,user} = useAuth0()\r\n\r\n        return (\r\n            <>\r\n            <nav className=\"navbar\">\r\n              <div className=\"nav-container\">\r\n                <NavLink exact to=\"/\" className=\"nav-logo\">\r\n                <img id='logoimg' src='./LOGO_NEW.jpg' alt='bkisan logo'/> \r\n                 {'  '}B-Kisan\r\n                </NavLink>\r\n      \r\n                <ul className={click ? \"nav-menu active\" : \"nav-menu\"}>\r\n\r\n                <li className=\"nav-item\">\r\n                {isAuthenticated && <span style={{\"color\":\"white\"}}>Welcome, {user.nickname}  </span> }\r\n                </li>\r\n\r\n                <li className=\"nav-item\" activeClassName=\"active\">\r\n                  <div class=\"dropdown\">\r\n  <button class=\"btn btn-dark dropdown-toggle\" type=\"button\" data-toggle=\"dropdown\"><ContactUs/>{' '}Contact us{' '}\r\n  <span class=\"caret\"></span></button>\r\n  <div class=\"dropdown-menu\" style={{\"width\":\"35vw\"}}>\r\n  <li><h4><Email/>{' '}Email : <a href=\"https://mail.google.com/mail/?view=cm&fs=1&tf=1&to=bkisansmartfarming@gmail.com\" target=\"__blank\">\r\n    bkisansmartfarming@gmail.com</a></h4></li><hr/>\r\n    <li><h4><Email/>{' '}Email : <a href=\"https://mail.google.com/mail/?view=cm&fs=1&tf=1&to=kisanpathshala@gmail.com\" target=\"__blank\">\r\n    kisanpathshala@gmail.com</a></h4></li><hr/>   \r\n  <li><h5>Office Contact :</h5><Telephone/> 9424538222</li><hr/>\r\n  <h5>Other contacts: </h5>\r\n  <ul style={{\"list-style-type\": \"none\"}}>\r\n    <li><Telephone/>9754838222{' '}(Madhyapradesh)</li>\r\n    <li><Telephone/>9754038222{' '}(Chattisgarh)</li>\r\n    <li><Telephone/>9754138222{' '}(Uttarpradesh)</li>\r\n    <li><Telephone/>7697438222{' '}(Maharashtra)</li>\r\n    <li><Telephone/>8966838222{' '}(Gujrat)</li>\r\n  </ul>\r\n  </div>\r\n</div>\r\n                  </li>\r\n\r\n                  <li className=\"nav-item\">\r\n                    <NavLink\r\n                      exact\r\n                      to=\"/dashboard\"\r\n                      activeClassName=\"active\"\r\n                      className=\"nav-links\"\r\n                      onClick={handleClick}\r\n                    >\r\n                   <Home/>{' '}Home\r\n                    </NavLink>\r\n                  </li>\r\n                  <li className=\"nav-item\">\r\n                    <NavLink\r\n                      exact\r\n                      to=\"/form\"\r\n                      activeClassName=\"active\"\r\n                      className=\"nav-links\"\r\n                      onClick={handleClick}\r\n                    >\r\n                      <Pencil/>{' '}Form\r\n                    </NavLink>\r\n                  </li>\r\n                  <li className=\"nav-item\">\r\n                    <NavLink\r\n                      exact\r\n                      to=\"/orders\"\r\n                      activeClassName=\"active\"\r\n                      className=\"nav-links\"\r\n                      onClick={handleClick}\r\n                    >\r\n                        <OrderList/>{' '}Orders\r\n                    </NavLink>   \r\n                  </li>\r\n\r\n                  <li className=\"n\">\r\n                  {/* {state.show_logout_btn && <button className=\"btn btn-primary\" style={{\"margin\":\"0px 0px 10px 0px\"}}  onClick={logout_clicked}>Logout</button>} */}\r\n                  {!isAuthenticated && <button className=\"btn btn-primary\" style={{\"margin\":\"0px 0px 10px 0px\"}}  onClick={()=>loginWithRedirect()}>Login</button>}\r\n                  {isAuthenticated && <button className=\"btn btn-primary\" style={{\"margin\":\"0px 0px 10px 0px\"}}  onClick={()=>logout()}>Logout</button>}\r\n                  </li>\r\n                </ul>\r\n                <div className=\"nav-icon\" onClick={handleClick}>\r\n                  <i className={click ? \"fas fa-times\" : \"fas fa-bars\"}></i>\r\n                </div>\r\n              </div>\r\n            </nav>\r\n          </>\r\n            )\r\n        }\r\n    export default TopNavBar","E:\\MERN\\BKisan Demo 2\\client\\src\\Components\\topnav\\TabForm.js",[],"E:\\MERN\\BKisan Demo 2\\client\\src\\Components\\dashboard\\TabDashboard.js",["273","274","275","276","277"],"E:\\MERN\\BKisan Demo 2\\client\\src\\Components\\grid\\TabShoworders.js",["278","279","280","281"],"E:\\MERN\\BKisan Demo 2\\client\\src\\Components\\dashboard\\ProductCard.js",[],"E:\\MERN\\BKisan Demo 2\\client\\src\\Components\\dashboard\\Location.js",["282","283","284","285","286"],"E:\\MERN\\BKisan Demo 2\\client\\src\\Components\\dashboard\\videocard.js",["287","288"],"E:\\MERN\\BKisan Demo 2\\client\\src\\Components\\grid\\ShowOrders.js",["289","290"],"E:\\MERN\\BKisan Demo 2\\client\\src\\Components\\icons\\icons.js",[],"E:\\MERN\\BKisan Demo 2\\client\\src\\Components\\form\\form.js",["291","292","293","294","295","296"],"E:\\MERN\\BKisan Demo 2\\client\\src\\Components\\form\\personal.js",["297"],"E:\\MERN\\BKisan Demo 2\\client\\src\\Components\\form\\statusbar.js",["298","299","300","301","302","303","304","305","306"],"E:\\MERN\\BKisan Demo 2\\client\\src\\Components\\crudnav\\crudnav.js",[],"E:\\MERN\\BKisan Demo 2\\client\\src\\Components\\form\\bank.js",["307","308","309"],"E:\\MERN\\BKisan Demo 2\\client\\src\\Components\\others\\GlobalFilter.js",[],"E:\\MERN\\BKisan Demo 2\\client\\src\\Components\\form\\Order\\Order2.js",["310","311","312","313","314","315"],"import React,{useState,useEffect,useRef} from 'react'\r\nimport './../order.css'\r\n\r\nfunction Order(props) {\r\n\r\n    const InputRef = useRef(null)\r\n\r\n    const [err,seterr]=useState({\r\n        err_Order_Details:{ show:true , message:'' },\r\n        err_Order_Quantity:{ show:true , message:'' },\r\n        err_Order_Rate:{ show:true , message:'' }\r\n    })\r\n\r\n    const [Order_Details ,set_Order_Details ]=useState(''); \r\n    const [Order_Quantity,set_Order_Quantity]=useState(0); \r\n    const [Order_Rate    ,set_Order_Rate    ]=useState(0); \r\n    const [Order_Amount  ,set_Order_Amount  ]=useState(0); \r\n    \r\n    const [TotalAmt    ,set_TotalAmt     ]=useState(0); \r\n    const [BillAmt     ,set_BillAmt      ]=useState(0);  \r\n    const [TransportChrg,set_TransportChrg]=useState(0);\r\n    const [Advance     ,set_Advance      ]=useState(0);\r\n    const [DueAmt      ,set_DueAmt       ]=useState(0);  \r\n\r\n    const [order_count,set_order_count]=useState(0);\r\n\r\n    const [is_valid,set_is_valid]=useState('')\r\n\r\n    function handlechange(e){\r\n        var name =e.target.name;\r\n        var value=e.target.value;\r\n        validate_form(name , value);\r\n        switch(name){\r\n            case 'Order_Details':set_Order_Details(value) \r\n                break;\r\n            case 'Order_Quantity':set_Order_Quantity(parseFloat(value)) \r\n                break;\r\n            case 'Order_Rate':set_Order_Rate(parseFloat(value))\r\n                break;\r\n\r\n            case 'TransportChrg':\r\n                                    if(Number.isNaN(value))\r\n                                    {\r\n                                        set_TransportChrg(0)\r\n                                        props.ssv({...props.sv,TransportChrg:Number(0)})\r\n                                    }\r\n                                    else{\r\n                                        set_TransportChrg(value)\r\n                                        props.ssv({...props.sv,TransportChrg:Number(value)})\r\n                                    }\r\n                break;    \r\n            case 'Advance': if(Number.isNaN(value))\r\n                                    {\r\n                                        set_Advance(0)\r\n                                        props.ssv({...props.sv,Advance:Number(0)})\r\n                                    }\r\n                                    else{\r\n                                        set_Advance(value)\r\n                                        props.ssv({...props.sv,Advance:Number(value)})\r\n                                    }\r\n            break;    \r\n\r\n            default:alert('unknown case')\r\n        }\r\n        // console.log(e.target.name,e.target.value)\r\n    }\r\n    //.......err code....................\r\n    function field_is_empty(value)\r\n    {\r\n        if(value === '' || value === null || value === 0)\r\n        {return true}\r\n        else\r\n        {return false}\r\n    }  \r\n    function get_table_length()\r\n    {\r\n        return(props.sv.OrderTable.length)\r\n    }\r\n    function validate_form(name, value) \r\n    {\r\n        switch (name) {\r\n            case 'Order_Details': if(field_is_empty(value) && props.sv.OrderCount===0)\r\n                            {\r\n                                seterr((prevState)=>({\r\n                                    ...prevState,\r\n                                    err_Order_Details  :{\r\n                                    ...prevState.err_Order_Details ,\r\n                                    show:true ,\r\n                                    message:'order details cant be blank'    \r\n                                    }\r\n                                }))\r\n                            }\r\n                            else{\r\n                                seterr((prevState)=>({\r\n                                    ...prevState,\r\n                                    err_Order_Details  :{\r\n                                    ...prevState.err_Order_Details ,\r\n                                    show:false ,\r\n                                    message:''    \r\n                                    }\r\n                                }))\r\n                            }\r\n            break;\r\n\r\n        case 'Order_Quantity':if(field_is_empty(value) && props.sv.OrderCount===0)\r\n                            {\r\n                                seterr((prevState)=>({\r\n                                    ...prevState,\r\n                                    err_Order_Quantity  :{\r\n                                    ...prevState.err_Order_Quantity ,\r\n                                    show:true ,\r\n                                    message:'Quantity cant be blank'    \r\n                                    }\r\n                                }))\r\n                            }\r\n                            else{\r\n                                seterr((prevState)=>({\r\n                                    ...prevState,\r\n                                    err_Order_Quantity:{\r\n                                    ...prevState.err_Order_Quantity ,\r\n                                    show:false ,\r\n                                    message:''    \r\n                                    }\r\n                                }))\r\n                            }\r\n            break;\r\n\r\n        case 'Order_Rate':if(field_is_empty(value) && props.sv.OrderCount===0)\r\n                            {\r\n                                seterr((prevState)=>({\r\n                                    ...prevState,\r\n                                    err_Order_Rate  :{\r\n                                    ...prevState.err_Order_Rate ,\r\n                                    show:true ,\r\n                                    message:'Rate cant be blank'    \r\n                                    }\r\n                                }))\r\n                            }\r\n                            else{\r\n                                seterr((prevState)=>({\r\n                                    ...prevState,\r\n                                    err_Order_Rate  :{\r\n                                    ...prevState.err_Order_Rate ,\r\n                                    show:false,\r\n                                    message:''    \r\n                                    }\r\n                                }))\r\n                            }\r\n            break;\r\n            case 'TransportChrg':break;\r\n            case 'Advance':break;\r\n            case 'Order_Amount':break;        \r\n            default:alert('unknown case encountered');\r\n            break;\r\n    }\r\n    }\r\n\r\n\r\n\r\n    //...................................\r\n\r\n    function add_ordr(e){\r\n        console.log('orc',props.sv.OrderCount)\r\n        e.preventDefault()\r\n        set_order_count (prevval => prevval+1)\r\n\r\n        var payload={\r\n            Order_Details :Order_Details ,\r\n            Order_Quantity:Order_Quantity,\r\n            Order_Rate    :Order_Rate    ,\r\n            Order_Amount  :Order_Amount  \r\n        }\r\n\r\n        const  temp = [...props.sv.OrderTable,payload]\r\n        // console.log(temp)\r\n        props.ssv({OrderTable:temp})\r\n    }\r\n\r\n    function delete_order(e,indx){\r\n        e.preventDefault()\r\n        set_order_count (prevval => prevval-1)\r\n        const temp = [...props.sv.OrderTable]\r\n        temp.splice(indx,1)\r\n        props.ssv({OrderTable:temp})\r\n    }\r\n\r\n    useEffect(() => {\r\n       InputRef.current.focus()\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        if(Order_Details ==='' || Order_Quantity === 0 || Order_Rate===0  )\r\n        {\r\n            set_is_valid('')\r\n        }\r\n        else\r\n        {\r\n           set_is_valid('form is valid')\r\n        }  \r\n    }, [Order_Details,Order_Quantity,Order_Rate])   \r\n\r\n    useEffect(() => {\r\n       set_Order_Amount(Order_Quantity * Order_Rate);\r\n        }, [Order_Quantity,Order_Rate])\r\n\r\n\r\n        function table_len(){\r\n            if (get_table_length() >=1 )\r\n            return true\r\n            else\r\n            return false\r\n            }    \r\n        \r\n    useEffect(()=>{\r\n        if(table_len())\r\n        {\r\n            console.log('setting show b1 to true')\r\n            props.show(true)\r\n        }\r\n        else{\r\n            props.show(false)\r\n            console.log('setting show b1 to false')\r\n        }\r\n        // props.ssv({...props.sv,OrderCount:Number(props.sv.OrderTable.length)})\r\n\r\n       var temp = 0;\r\n       props.sv.OrderTable.map((k)=>{\r\n        temp = temp + k.Order_Amount ;\r\n       })\r\n       //console.log(temp)\r\n       set_BillAmt(temp)\r\n       props.ssv({...props.sv,BillAmt:temp})\r\n\r\n       if( props.sv.OrderTable.length === 0)\r\n       {\r\n        set_TransportChrg(0);\r\n        set_Advance(0);   \r\n        props.ssv({...props.sv,TransportChrg:0})\r\n        props.ssv({...props.sv,Advance:0})\r\n       }\r\n       set_Order_Details('');set_Order_Quantity(0);set_Order_Rate(0);\r\n    },[order_count])    \r\n\r\n    useEffect(() => {\r\n        var temp = 0;\r\n        temp = Number(TransportChrg) + BillAmt\r\n        set_TotalAmt(temp)\r\n        props.ssv({...props.sv,TotalAmt:temp})\r\n    }, [BillAmt,TransportChrg])\r\n\r\n    useEffect(() => {\r\n        var temp = 0;\r\n        temp = TotalAmt - Advance\r\n        set_DueAmt(temp)\r\n        props.ssv({...props.sv,DueAmt:temp})\r\n    }, [TotalAmt,Advance])\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n                    <h1>Order details</h1>  \r\n        <table >\r\n               <tr className=\"tablebox\">\r\n                    <th className=\"tablecell\" >[+/-]</th>\r\n                    <th className=\"tablecell\">Descrtiption</th>\r\n                    <th className=\"tablecell\">Quantity</th>\r\n                    <th className=\"tablecell\">Rate</th>\r\n                    <th className=\"tablecell\">Amount</th>\r\n                </tr>\r\n                <tr className=\"tablebox\">\r\n                    <td className=\"tablecell\">{}</td>\r\n                    <td className=\"tablecell\">{err.err_Order_Details.show ? err.err_Order_Details.message :''}</td>\r\n                    <td className=\"tablecell\">{err.err_Order_Quantity.show ? err.err_Order_Quantity.message :''}</td>\r\n                    <td className=\"tablecell\">{err.err_Order_Rate.show ? err.err_Order_Rate.message :''}</td>\r\n                    <td className=\"tablecell\">{}</td>\r\n                </tr>\r\n                <tr className=\"tablebox\">\r\n                    <th className=\"tablecell\" ><button onClick={add_ordr} className=\"btn_add\" disabled={!`${is_valid}`}>+</button></th>\r\n                    <th className=\"tablecell\" ><input ref={InputRef} name=\"Order_Details\"  value={Order_Details} onChange={handlechange} placeholder=\"Desctiption\" type=\"text\" className=\"inp\"/></th>\r\n                    <th className=\"tablecell\" ><input name=\"Order_Quantity\" value={Order_Quantity ||0} onChange={handlechange} placeholder=\"Quantity\" type=\"number\" className=\"inp\"/></th>\r\n                    <th className=\"tablecell\" ><input name=\"Order_Rate\"  value={Order_Rate||0} onChange={handlechange} placeholder=\"Rate\" type=\"number\" className=\"inp\"/></th>\r\n                    <th className=\"tablecell\" ><input name=\"Order_Amount\" value={Order_Amount} placeholder=\"Order Amount\" disabled type=\"number\" className=\"inp\"/></th>\r\n                </tr>\r\n                  {     \r\n                    props.sv.OrderTable.map((k,indx)=>{\r\n                       return (<tr className=\"tablebox\" key={\"k\"+indx}>\r\n                           <td className=\"tablecell\" ><button className=\"del_btn\" onClick={(e)=>delete_order(e,indx)}>delete{' '}{indx+1}</button></td>\r\n                           <td className=\"tablecell\">{k.Order_Details}</td>\r\n                           <td className=\"tablecell\">{k.Order_Quantity}</td>\r\n                           <td className=\"tablecell\">{k.Order_Rate}</td>\r\n                           <td className=\"tablecell\">{k.Order_Amount}</td>   \r\n                       </tr>)\r\n                     })\r\n                  }\r\n                   <tr className=\"tablebox\">\r\n                                <td className=\"tablecell\"></td>\r\n                                <td className=\"tablecell\"></td>\r\n                                <td className=\"tablecell\"></td>\r\n                                <td className=\"tablecell\">Bill Amount :{''}</td>\r\n                                <td className=\"tablecell\">{BillAmt}</td>\r\n                            </tr>    \r\n                   <tr className=\"tablebox\">\r\n                                <td className=\"tablecell\"></td>\r\n                                <td className=\"tablecell\"></td>\r\n                                <td className=\"tablecell\"></td>\r\n                                <td className=\"tablecell\">Transport Charges</td>\r\n                                <td className=\"tablecell\">{\r\n                                <input className=\"inp\" name=\"TransportChrg\" value={TransportChrg ||0} onChange={handlechange} placeholder=\"Transport Charge\"  className=\"inp\" type=\"number\"/>\r\n                                }</td>  \r\n                            </tr>      \r\n                   <tr className=\"tablebox\">\r\n                                <td className=\"tablecell\"></td>\r\n                                <td className=\"tablecell\"></td>\r\n                                <td className=\"tablecell\"></td>\r\n                                <td className=\"tablecell\">Total Amount :{''}</td>\r\n                                <td className=\"tablecell\">{TotalAmt}</td>\r\n                            </tr>         \r\n                    <tr className=\"tablebox\">\r\n                                <td className=\"tablecell\"></td>\r\n                                <td className=\"tablecell\"></td>\r\n                                <td className=\"tablecell\"></td>\r\n                                <td className=\"tablecell\">Advance</td>\r\n                                <td className=\"tablecell\">{\r\n                                <input className=\"inp\" name= \"Advance\" value={Advance || 0} onChange={handlechange} placeholder=\"Advance\"  className=\"inp\" type=\"number\"/>\r\n                                }</td>  \r\n                            </tr>   \r\n                    <tr className=\"tablebox\">\r\n                                <td className=\"tablecell\"></td>\r\n                                <td className=\"tablecell\"></td>\r\n                                <td className=\"tablecell\"></td>\r\n                                <td className=\"tablecell\">Due Amount :{''}</td>\r\n                                <td className=\"tablecell\">{DueAmt}</td>\r\n                            </tr>                   \r\n        </table>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Order\r\n","E:\\MERN\\BKisan Demo 2\\client\\src\\Components\\form\\Order\\delivery.js",["316"],"E:\\MERN\\BKisan Demo 2\\client\\src\\Components\\form\\Order\\deposit.js",["317"],"E:\\MERN\\BKisan Demo 2\\client\\src\\Components\\form\\icons.js",[],"E:\\MERN\\BKisan Demo 2\\client\\src\\Components\\crudnav\\crudnav_deletebtn.js",[],"E:\\MERN\\BKisan Demo 2\\client\\src\\Components\\crudnav\\crudnav_updatebtn.js",[],{"ruleId":"318","replacedBy":"319"},{"ruleId":"320","replacedBy":"321"},{"ruleId":"322","severity":1,"message":"323","line":18,"column":23,"nodeType":"324","messageId":"325","endLine":18,"endColumn":36},{"ruleId":"326","severity":1,"message":"327","line":39,"column":8,"nodeType":"328","endLine":39,"endColumn":20,"suggestions":"329"},{"ruleId":"326","severity":1,"message":"330","line":59,"column":8,"nodeType":"328","endLine":59,"endColumn":18,"suggestions":"331"},{"ruleId":"332","severity":1,"message":"333","line":69,"column":41,"nodeType":"334","endLine":69,"endColumn":84},{"ruleId":"322","severity":1,"message":"335","line":1,"column":17,"nodeType":"324","messageId":"325","endLine":1,"endColumn":26},{"ruleId":"326","severity":1,"message":"336","line":23,"column":19,"nodeType":"337","endLine":23,"endColumn":32},{"ruleId":"326","severity":1,"message":"336","line":26,"column":20,"nodeType":"337","endLine":26,"endColumn":33},{"ruleId":"338","severity":1,"message":"339","line":43,"column":58,"nodeType":"340","endLine":43,"endColumn":111},{"ruleId":"341","severity":1,"message":"342","line":44,"column":47,"nodeType":"340","endLine":44,"endColumn":147},{"ruleId":"322","severity":1,"message":"343","line":7,"column":11,"nodeType":"324","messageId":"325","endLine":7,"endColumn":20},{"ruleId":"344","severity":1,"message":"345","line":22,"column":12,"nodeType":"340","endLine":24,"endColumn":85},{"ruleId":"322","severity":1,"message":"346","line":1,"column":15,"nodeType":"324","messageId":"325","endLine":1,"endColumn":24},{"ruleId":"326","severity":1,"message":"347","line":138,"column":47,"nodeType":"328","endLine":138,"endColumn":49,"suggestions":"348"},{"ruleId":"341","severity":1,"message":"342","line":12,"column":17,"nodeType":"340","endLine":12,"endColumn":148},{"ruleId":"341","severity":1,"message":"342","line":13,"column":17,"nodeType":"340","endLine":13,"endColumn":147},{"ruleId":"341","severity":1,"message":"342","line":17,"column":17,"nodeType":"340","endLine":17,"endColumn":140},{"ruleId":"341","severity":1,"message":"342","line":18,"column":17,"nodeType":"340","endLine":18,"endColumn":144},{"ruleId":"341","severity":1,"message":"342","line":20,"column":17,"nodeType":"340","endLine":20,"endColumn":162},{"ruleId":"322","severity":1,"message":"349","line":117,"column":16,"nodeType":"324","messageId":"325","endLine":117,"endColumn":22},{"ruleId":"322","severity":1,"message":"350","line":118,"column":16,"nodeType":"324","messageId":"325","endLine":118,"endColumn":23},{"ruleId":"322","severity":1,"message":"351","line":119,"column":16,"nodeType":"324","messageId":"325","endLine":119,"endColumn":23},{"ruleId":"322","severity":1,"message":"352","line":120,"column":16,"nodeType":"324","messageId":"325","endLine":120,"endColumn":23},{"ruleId":"322","severity":1,"message":"353","line":121,"column":16,"nodeType":"324","messageId":"325","endLine":121,"endColumn":22},{"ruleId":"326","severity":1,"message":"354","line":146,"column":16,"nodeType":"328","endLine":146,"endColumn":33,"suggestions":"355"},{"ruleId":"322","severity":1,"message":"356","line":14,"column":13,"nodeType":"324","messageId":"325","endLine":14,"endColumn":20},{"ruleId":"322","severity":1,"message":"357","line":28,"column":13,"nodeType":"324","messageId":"325","endLine":28,"endColumn":23},{"ruleId":"322","severity":1,"message":"358","line":29,"column":13,"nodeType":"324","messageId":"325","endLine":29,"endColumn":21},{"ruleId":"322","severity":1,"message":"359","line":30,"column":13,"nodeType":"324","messageId":"325","endLine":30,"endColumn":20},{"ruleId":"322","severity":1,"message":"360","line":31,"column":13,"nodeType":"324","messageId":"325","endLine":31,"endColumn":20},{"ruleId":"322","severity":1,"message":"361","line":32,"column":13,"nodeType":"324","messageId":"325","endLine":32,"endColumn":26},{"ruleId":"322","severity":1,"message":"362","line":33,"column":13,"nodeType":"324","messageId":"325","endLine":33,"endColumn":19},{"ruleId":"322","severity":1,"message":"363","line":39,"column":13,"nodeType":"324","messageId":"325","endLine":39,"endColumn":25},{"ruleId":"326","severity":1,"message":"364","line":122,"column":10,"nodeType":"328","endLine":122,"endColumn":17,"suggestions":"365"},{"ruleId":"326","severity":1,"message":"366","line":425,"column":7,"nodeType":"328","endLine":425,"endColumn":12,"suggestions":"367"},{"ruleId":"368","severity":1,"message":"369","line":150,"column":57,"nodeType":"370","messageId":"371","endLine":150,"endColumn":58,"suggestions":"372"},{"ruleId":"368","severity":1,"message":"369","line":150,"column":103,"nodeType":"370","messageId":"371","endLine":150,"endColumn":104,"suggestions":"373"},{"ruleId":"326","severity":1,"message":"366","line":257,"column":6,"nodeType":"328","endLine":257,"endColumn":11,"suggestions":"374"},{"ruleId":"375","severity":1,"message":"376","line":227,"column":35,"nodeType":"377","messageId":"378","endLine":227,"endColumn":37},{"ruleId":"326","severity":1,"message":"379","line":242,"column":7,"nodeType":"328","endLine":242,"endColumn":20,"suggestions":"380"},{"ruleId":"326","severity":1,"message":"366","line":249,"column":8,"nodeType":"328","endLine":249,"endColumn":31,"suggestions":"381"},{"ruleId":"326","severity":1,"message":"366","line":256,"column":8,"nodeType":"328","endLine":256,"endColumn":26,"suggestions":"382"},{"ruleId":"332","severity":1,"message":"333","line":309,"column":159,"nodeType":"334","endLine":309,"endColumn":174},{"ruleId":"332","severity":1,"message":"333","line":325,"column":140,"nodeType":"334","endLine":325,"endColumn":155},{"ruleId":"326","severity":1,"message":"366","line":97,"column":6,"nodeType":"328","endLine":97,"endColumn":11,"suggestions":"383"},{"ruleId":"326","severity":1,"message":"379","line":181,"column":3,"nodeType":"328","endLine":181,"endColumn":28,"suggestions":"384"},{"ruleId":"318","replacedBy":"385"},{"ruleId":"320","replacedBy":"386"},{"ruleId":"322","severity":1,"message":"387","line":13,"column":14,"nodeType":"324","messageId":"325","endLine":13,"endColumn":19},{"ruleId":"322","severity":1,"message":"388","line":14,"column":13,"nodeType":"324","messageId":"325","endLine":14,"endColumn":27},{"ruleId":"322","severity":1,"message":"335","line":1,"column":17,"nodeType":"324","messageId":"325","endLine":1,"endColumn":26},{"ruleId":"326","severity":1,"message":"336","line":23,"column":19,"nodeType":"337","endLine":23,"endColumn":32},{"ruleId":"326","severity":1,"message":"336","line":26,"column":20,"nodeType":"337","endLine":26,"endColumn":33},{"ruleId":"338","severity":1,"message":"339","line":43,"column":58,"nodeType":"340","endLine":43,"endColumn":111},{"ruleId":"341","severity":1,"message":"342","line":44,"column":47,"nodeType":"340","endLine":44,"endColumn":147},{"ruleId":"322","severity":1,"message":"389","line":20,"column":21,"nodeType":"324","messageId":"325","endLine":20,"endColumn":32},{"ruleId":"322","severity":1,"message":"323","line":21,"column":23,"nodeType":"324","messageId":"325","endLine":21,"endColumn":36},{"ruleId":"326","severity":1,"message":"327","line":45,"column":8,"nodeType":"328","endLine":45,"endColumn":20,"suggestions":"390"},{"ruleId":"326","severity":1,"message":"330","line":65,"column":8,"nodeType":"328","endLine":65,"endColumn":18,"suggestions":"391"},{"ruleId":"341","severity":1,"message":"342","line":12,"column":17,"nodeType":"340","endLine":12,"endColumn":148},{"ruleId":"341","severity":1,"message":"342","line":13,"column":17,"nodeType":"340","endLine":13,"endColumn":147},{"ruleId":"341","severity":1,"message":"342","line":17,"column":17,"nodeType":"340","endLine":17,"endColumn":140},{"ruleId":"341","severity":1,"message":"342","line":18,"column":17,"nodeType":"340","endLine":18,"endColumn":144},{"ruleId":"341","severity":1,"message":"342","line":20,"column":17,"nodeType":"340","endLine":20,"endColumn":162},{"ruleId":"322","severity":1,"message":"343","line":7,"column":11,"nodeType":"324","messageId":"325","endLine":7,"endColumn":20},{"ruleId":"344","severity":1,"message":"345","line":22,"column":12,"nodeType":"340","endLine":24,"endColumn":85},{"ruleId":"322","severity":1,"message":"346","line":1,"column":15,"nodeType":"324","messageId":"325","endLine":1,"endColumn":24},{"ruleId":"326","severity":1,"message":"347","line":138,"column":47,"nodeType":"328","endLine":138,"endColumn":49,"suggestions":"392"},{"ruleId":"322","severity":1,"message":"349","line":117,"column":16,"nodeType":"324","messageId":"325","endLine":117,"endColumn":22},{"ruleId":"322","severity":1,"message":"350","line":118,"column":16,"nodeType":"324","messageId":"325","endLine":118,"endColumn":23},{"ruleId":"322","severity":1,"message":"351","line":119,"column":16,"nodeType":"324","messageId":"325","endLine":119,"endColumn":23},{"ruleId":"322","severity":1,"message":"352","line":120,"column":16,"nodeType":"324","messageId":"325","endLine":120,"endColumn":23},{"ruleId":"322","severity":1,"message":"353","line":121,"column":16,"nodeType":"324","messageId":"325","endLine":121,"endColumn":22},{"ruleId":"326","severity":1,"message":"354","line":146,"column":16,"nodeType":"328","endLine":146,"endColumn":33,"suggestions":"393"},{"ruleId":"326","severity":1,"message":"366","line":425,"column":7,"nodeType":"328","endLine":425,"endColumn":12,"suggestions":"394"},{"ruleId":"322","severity":1,"message":"356","line":14,"column":13,"nodeType":"324","messageId":"325","endLine":14,"endColumn":20},{"ruleId":"322","severity":1,"message":"357","line":28,"column":13,"nodeType":"324","messageId":"325","endLine":28,"endColumn":23},{"ruleId":"322","severity":1,"message":"358","line":29,"column":13,"nodeType":"324","messageId":"325","endLine":29,"endColumn":21},{"ruleId":"322","severity":1,"message":"359","line":30,"column":13,"nodeType":"324","messageId":"325","endLine":30,"endColumn":20},{"ruleId":"322","severity":1,"message":"360","line":31,"column":13,"nodeType":"324","messageId":"325","endLine":31,"endColumn":20},{"ruleId":"322","severity":1,"message":"361","line":32,"column":13,"nodeType":"324","messageId":"325","endLine":32,"endColumn":26},{"ruleId":"322","severity":1,"message":"362","line":33,"column":13,"nodeType":"324","messageId":"325","endLine":33,"endColumn":19},{"ruleId":"322","severity":1,"message":"363","line":39,"column":13,"nodeType":"324","messageId":"325","endLine":39,"endColumn":25},{"ruleId":"326","severity":1,"message":"364","line":122,"column":10,"nodeType":"328","endLine":122,"endColumn":17,"suggestions":"395"},{"ruleId":"368","severity":1,"message":"369","line":150,"column":57,"nodeType":"370","messageId":"371","endLine":150,"endColumn":58,"suggestions":"396"},{"ruleId":"368","severity":1,"message":"369","line":150,"column":103,"nodeType":"370","messageId":"371","endLine":150,"endColumn":104,"suggestions":"397"},{"ruleId":"326","severity":1,"message":"366","line":257,"column":6,"nodeType":"328","endLine":257,"endColumn":11,"suggestions":"398"},{"ruleId":"375","severity":1,"message":"376","line":227,"column":35,"nodeType":"377","messageId":"378","endLine":227,"endColumn":37},{"ruleId":"326","severity":1,"message":"379","line":242,"column":7,"nodeType":"328","endLine":242,"endColumn":20,"suggestions":"399"},{"ruleId":"326","severity":1,"message":"366","line":249,"column":8,"nodeType":"328","endLine":249,"endColumn":31,"suggestions":"400"},{"ruleId":"326","severity":1,"message":"366","line":256,"column":8,"nodeType":"328","endLine":256,"endColumn":26,"suggestions":"401"},{"ruleId":"332","severity":1,"message":"333","line":309,"column":159,"nodeType":"334","endLine":309,"endColumn":174},{"ruleId":"332","severity":1,"message":"333","line":325,"column":140,"nodeType":"334","endLine":325,"endColumn":155},{"ruleId":"326","severity":1,"message":"366","line":97,"column":6,"nodeType":"328","endLine":97,"endColumn":11,"suggestions":"402"},{"ruleId":"326","severity":1,"message":"379","line":181,"column":3,"nodeType":"328","endLine":181,"endColumn":28,"suggestions":"403"},"no-native-reassign",["404"],"no-negated-in-lhs",["405"],"no-unused-vars","'setregistered' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'login' and 'pass'. Either include them or remove the dependency array.","ArrayExpression",["406"],"React Hook useEffect has missing dependencies: 'login', 'pass', and 'setState'. Either include them or remove the dependency array.",["407"],"react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","'Component' is defined but never used.","React Hook useMemo does nothing when called with only one argument. Did you forget to pass an array of dependencies?","MemberExpression","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","'video_url' is assigned a value but never used.","jsx-a11y/iframe-has-title","<iframe> elements must have a unique title property.","'useEffect' is defined but never used.","React Hook useMemo has a missing dependency: 'GroupedColumns'. Either include it or remove the dependency array.",["408"],"'show_a' is assigned a value but never used.","'show_b1' is assigned a value but never used.","'show_b2' is assigned a value but never used.","'show_b3' is assigned a value but never used.","'show_c' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'a.AadharNo', 'a.Contact', 'a.Name', 'b1.OrderTable.length', 'b3.DepositTable.length', 'c.AcNo', and 'c.IFSC'. Either include them or remove the dependency array.",["409"],"'OrderNo' is assigned a value but never used.","'OrderCount' is assigned a value but never used.","'TotalAmt' is assigned a value but never used.","'Advance' is assigned a value but never used.","'BillAmt' is assigned a value but never used.","'TransportChrg' is assigned a value but never used.","'DueAmt' is assigned a value but never used.","'DepositCount' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'check_validity'. Either include it or remove the dependency array.",["410"],"React Hook useEffect has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.",["411"],"no-useless-escape","Unnecessary escape character: \\[.","Literal","unnecessaryEscape",["412","413"],["414","415"],["416"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","React Hook useEffect has missing dependencies: 'props' and 'table_len'. Either include them or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.",["417"],["418"],["419"],["420"],["421"],["404"],["405"],"'state' is assigned a value but never used.","'logout_clicked' is assigned a value but never used.","'setloggedin' is assigned a value but never used.",["422"],["423"],["424"],["425"],["426"],["427"],["428","429"],["430","431"],["432"],["433"],["434"],["435"],["436"],["437"],"no-global-assign","no-unsafe-negation",{"desc":"438","fix":"439"},{"desc":"440","fix":"441"},{"desc":"442","fix":"443"},{"desc":"444","fix":"445"},{"desc":"446","fix":"447"},{"desc":"448","fix":"449"},{"messageId":"450","fix":"451","desc":"452"},{"messageId":"453","fix":"454","desc":"455"},{"messageId":"450","fix":"456","desc":"452"},{"messageId":"453","fix":"457","desc":"455"},{"desc":"448","fix":"458"},{"desc":"459","fix":"460"},{"desc":"461","fix":"462"},{"desc":"463","fix":"464"},{"desc":"448","fix":"465"},{"desc":"466","fix":"467"},{"desc":"438","fix":"468"},{"desc":"440","fix":"469"},{"desc":"442","fix":"470"},{"desc":"444","fix":"471"},{"desc":"448","fix":"472"},{"desc":"446","fix":"473"},{"messageId":"450","fix":"474","desc":"452"},{"messageId":"453","fix":"475","desc":"455"},{"messageId":"450","fix":"476","desc":"452"},{"messageId":"453","fix":"477","desc":"455"},{"desc":"448","fix":"478"},{"desc":"459","fix":"479"},{"desc":"461","fix":"480"},{"desc":"463","fix":"481"},{"desc":"448","fix":"482"},{"desc":"466","fix":"483"},"Update the dependencies array to be: [login, pass, registered]",{"range":"484","text":"485"},"Update the dependencies array to be: [loggedin, login, pass, setState]",{"range":"486","text":"487"},"Update the dependencies array to be: [GroupedColumns]",{"range":"488","text":"489"},"Update the dependencies array to be: [a.AadharNo, a.Contact, a.Name, b1.OrderTable.length, b3.DepositTable.length, c.AcNo, c.DealerContact, c.IFSC]",{"range":"490","text":"491"},"Update the dependencies array to be: [check_validity, props]",{"range":"492","text":"493"},"Update the dependencies array to be: [err, props]",{"range":"494","text":"495"},"removeEscape",{"range":"496","text":"497"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"498","text":"499"},"Replace the `\\` with `\\\\` to include the actual backslash character.",{"range":"500","text":"497"},{"range":"501","text":"499"},{"range":"502","text":"495"},"Update the dependencies array to be: [order_count, props, table_len]",{"range":"503","text":"504"},"Update the dependencies array to be: [BillAmt, TransportChrg, props]",{"range":"505","text":"506"},"Update the dependencies array to be: [TotalAmt, Advance, props]",{"range":"507","text":"508"},{"range":"509","text":"495"},"Update the dependencies array to be: [bnk_count, del_bnk_count, props, table_len]",{"range":"510","text":"511"},{"range":"512","text":"485"},{"range":"513","text":"487"},{"range":"514","text":"489"},{"range":"515","text":"491"},{"range":"516","text":"495"},{"range":"517","text":"493"},{"range":"518","text":"497"},{"range":"519","text":"499"},{"range":"520","text":"497"},{"range":"521","text":"499"},{"range":"522","text":"495"},{"range":"523","text":"504"},{"range":"524","text":"506"},{"range":"525","text":"508"},{"range":"526","text":"495"},{"range":"527","text":"511"},[1185,1197],"[login, pass, registered]",[1688,1698],"[loggedin, login, pass, setState]",[5101,5103],"[GroupedColumns]",[4530,4547],"[a.AadharNo, a.Contact, a.Name, b1.OrderTable.length, b3.DepositTable.length, c.AcNo, c.DealerContact, c.IFSC]",[2644,2651],"[check_validity, props]",[17598,17603],"[err, props]",[5817,5818],"",[5817,5817],"\\",[5863,5864],[5863,5863],[10207,10212],[8796,8809],"[order_count, props, table_len]",[8995,9018],"[BillAmt, TransportChrg, props]",[9183,9201],"[TotalAmt, Advance, props]",[2766,2771],[4565,4590],"[bnk_count, del_bnk_count, props, table_len]",[1283,1295],[1786,1796],[5101,5103],[4530,4547],[17598,17603],[2644,2651],[5817,5818],[5817,5817],[5863,5864],[5863,5863],[10207,10212],[8796,8809],[8995,9018],[9183,9201],[2766,2771],[4565,4590]]